import LISTTestScoring.LISTTestScoring;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.*;

public class TestSanta {
    private static LISTTestScoring scoring = null;

    @BeforeClass
    public static void initScoring() {
        scoring = new LISTTestScoring();
        scoring.setScore("lang:common_list_test_scoring_name", 0, 100);
    }

    @Test
    public void basement() {
        assertEquals("v",1, Santa.basement("v") );
        assertEquals("v^",1, Santa.basement("v^") );
        assertEquals("^vv",3, Santa.basement("^vv") );
        assertEquals("vv^v",1, Santa.basement("vv^v") );
        assertEquals("v^^v^",1, Santa.basement("v^^v^") );
        assertEquals("v^^^^^",1, Santa.basement("v^^^^^") );
        assertEquals("vvv^vv^",1, Santa.basement("vvv^vv^") );
        assertEquals("^v^vvvv^",5, Santa.basement("^v^vvvv^") );
        assertEquals("^^v^^^^^^",-1, Santa.basement("^^v^^^^^^") );
        assertEquals("^v^^v^^^v^",-1, Santa.basement("^v^^v^^^v^") );
        assertEquals("^v^v^^^^^v^",-1, Santa.basement("^v^v^^^^^v^") );
        assertEquals("^^^v^^v^^vvv",-1, Santa.basement("^^^v^^v^^vvv") );
        assertEquals("vvv^^vvv^^vv^",1, Santa.basement("vvv^^vvv^^vv^") );
        assertEquals("v^vv^^vvvvv^^^",1, Santa.basement("v^vv^^vvvvv^^^") );
        assertEquals("vv^vvvvv^vv^^^v",1, Santa.basement("vv^vvvvv^vv^^^v") );
        assertEquals("^v^vv^^^vvv^^^^v",5, Santa.basement("^v^vv^^^vvv^^^^v") );
        assertEquals("^vv^^^vvvvvvvv^^v",3, Santa.basement("^vv^^^vvvvvvvv^^v") );
        assertEquals("^vvv^vv^^^^^vvvvv^",3, Santa.basement("^vvv^vv^^^^^vvvvv^") );
        assertEquals("v^v^^v^^vv^^vvv^^^^",1, Santa.basement("v^v^^v^^vv^^vvv^^^^") );
        assertEquals("v^^^vv^^^^^vv^vv^^^^",1, Santa.basement("v^^^vv^^^^^vv^vv^^^^") );
        assertEquals("v^vvv^vv^vv^^^^^vvvv^",1, Santa.basement("v^vvv^vv^vv^^^^^vvvv^") );
        assertEquals("^^^v^^^vv^^^v^vv^^vv^^",-1, Santa.basement("^^^v^^^vv^^^v^vv^^vv^^") );
        assertEquals("v^^^^vvvv^vvvv^^v^vvvv^",1, Santa.basement("v^^^^vvvv^vvvv^^v^vvvv^") );
        assertEquals("^^^^vvvv^^vvv^^v^^^^v^vv",13, Santa.basement("^^^^vvvv^^vvv^^v^^^^v^vv") );
        assertEquals("vv^^^^^vvvv^^^^^^^^^^^^v^",1, Santa.basement("vv^^^^^vvvv^^^^^^^^^^^^v^") );
        assertEquals("^v^^v^vv^v^v^^^^^v^vv^^vv^",-1, Santa.basement("^v^^v^vv^v^v^^^^^v^vv^^vv^") );
        assertEquals("^^^^v^v^v^vv^^v^^v^v^vv^vvv",-1, Santa.basement("^^^^v^v^v^vv^^v^^v^v^vv^vvv") );
        assertEquals("^vvv^v^v^^vvv^^v^^v^^^vvv^^^",3, Santa.basement("^vvv^v^v^^vvv^^v^^v^^^vvv^^^") );
        assertEquals("vv^^v^vvv^vv^^v^vvvv^vv^vv^^v",1, Santa.basement("vv^^v^vvv^vv^^v^vvvv^vv^vv^^v") );
        assertEquals("v^vvvvvvvvvv^^vv^^^v^^^v^vvv^v",1, Santa.basement("v^vvvvvvvvvv^^vv^^^v^^^v^vvv^v") );
        assertEquals("^v^^^v^v^vv^^vvvvv^v^^vv^v^^vv^",17, Santa.basement("^v^^^v^v^vv^^vvvvv^v^^vv^v^^vv^") );
        assertEquals("^^^^vvvvvv^vv^^^v^^^v^vv^^^^^v^^",9, Santa.basement("^^^^vvvvvv^vv^^^v^^^v^vv^^^^^v^^") );
        assertEquals("v^^vv^vv^^v^v^^^v^v^^vv^^v^vvv^^^",1, Santa.basement("v^^vv^vv^^v^v^^^v^v^^vv^^v^vvv^^^") );
        assertEquals("^vvv^^v^^vvvv^vvvvvv^^^vv^^v^^vvvv",3, Santa.basement("^vvv^^v^^vvvv^vvvvvv^^^vv^^v^^vvvv") );
        assertEquals("^v^v^^^vvvv^vvv^vvv^vv^^^^vv^v^^vv^",11, Santa.basement("^v^v^^^vvvv^vvv^vvv^vv^^^^vv^v^^vv^") );
        assertEquals("^v^^vv^v^^v^^v^^^vvv^vv^vv^^^^^v^v^^",-1, Santa.basement("^v^^vv^v^^v^^v^^^vvv^vv^vv^^^^^v^v^^") );
        assertEquals("vv^vv^^v^^^^^v^v^vv^^v^^vvvv^v^^v^vvv",1, Santa.basement("vv^vv^^v^^^^^v^v^vv^^v^^vvvv^v^^v^vvv") );
        assertEquals("^^v^vvvv^^vv^vvvv^^vv^v^^v^v^vvvv^vvvv",7, Santa.basement("^^v^vvvv^^vv^vvvv^^vv^v^^v^v^vvvv^vvvv") );
        assertEquals("vvvvv^v^^v^^^v^^vv^^^v^^^^^vvvvvvv^^^v^",1, Santa.basement("vvvvv^v^^v^^^v^^vv^^^v^^^^^vvvvvvv^^^v^") );
        assertEquals("^^^^vvv^^vvv^vv^^^^vv^v^^v^^^v^^^v^^vv^v",15, Santa.basement("^^^^vvv^^vvv^vv^^^^vv^v^^v^^^v^^^v^^vv^v") );
        assertEquals("^v^vvv^^^v^^v^vvv^^^^^v^v^^v^vvv^v^^^^^v^",5, Santa.basement("^v^vvv^^^v^^v^vvv^^^^^v^v^^v^vvv^v^^^^^v^") );
        assertEquals("^^v^vvv^^^v^vvv^v^vvv^^^^^^^vvvvvvv^^^^^v^",7, Santa.basement("^^v^vvv^^^v^vvv^v^vvv^^^^^^^vvvvvvv^^^^^v^") );
        assertEquals("v^^v^v^v^vvv^^v^^v^^^^^^^vv^^^vv^vvvv^^vvvv",1, Santa.basement("v^^v^v^v^vvv^^v^^v^^^^^^^vv^^^vv^vvvv^^vvvv") );
        assertEquals("^vv^v^^vv^^vvvv^v^v^vvv^^^^v^v^v^v^vv^^^vv^v",3, Santa.basement("^vv^v^^vv^^vvvv^v^v^vvv^^^^v^v^v^v^vv^^^vv^v") );
        assertEquals("^v^^vvvv^v^^vvv^vvvvvv^^^^v^vvv^v^v^^v^vv^v^^",7, Santa.basement("^v^^vvvv^v^^vvv^vvvvvv^^^^v^vvv^v^v^^v^vv^v^^") );
        assertEquals("^v^^vv^v^^^v^^^vv^v^vvvv^v^v^vvv^vvvvvv^vv^^vv",31, Santa.basement("^v^^vv^v^^^v^^^vv^v^vvvv^v^v^vvv^vvvvvv^vv^^vv") );
        assertEquals("vv^vvv^v^vvv^vv^vvv^^^^vv^^^^^vv^^v^^v^^vv^vvv^",1, Santa.basement("vv^vvv^v^vvv^vv^vvv^^^^vv^^^^^vv^^v^^v^^vv^vvv^") );
        assertEquals("^^v^^^^^v^v^vvvvv^v^vvvvvvv^vv^^^^^^v^vvv^^vvv^v",23, Santa.basement("^^v^^^^^v^v^vvvvv^v^vvvvvvv^vv^^^^^^v^vvv^^vvv^v") );
        assertEquals("vvv^v^v^^vvv^vvvvvvvvvv^vv^v^^^^^v^^^^vvvvvv^vvv^",1, Santa.basement("vvv^v^v^^vvv^vvvvvvvvvv^vv^v^^^^^v^^^^vvvvvv^vvv^") );
        assertEquals("^v^v^^v^vvvv^vv^^^^v^^v^vv^^v^^^v^vv^v^vv^vv^vv^^^",11, Santa.basement("^v^v^^v^vvvv^vv^^^^v^^v^vv^^v^^^v^vv^v^vv^vv^vv^^^") );
        assertEquals("v^^vv^v^^v^^vv^vvvvvv^vv^v^v^vvv^^^^v^vv^v^v^v^^^vv",1, Santa.basement("v^^vv^v^^v^^vv^vvvvvv^vv^v^v^vvv^^^^v^vv^v^v^v^^^vv") );
        assertEquals("^^v^vvvv^vvv^^^^^v^vv^^^v^^^^^vvvv^^^^vvvv^^^^^v^v^^",7, Santa.basement("^^v^vvvv^vvv^^^^^v^vv^^^v^^^^^vvvv^^^^vvvv^^^^^v^v^^") );
        assertEquals("vvv^v^^^vvv^^^^v^vvvvv^^vv^vv^^vvvv^v^^^v^^^v^^^v^^^v",1, Santa.basement("vvv^v^^^vvv^^^^v^vvvvv^^vv^vv^^vvvv^v^^^v^^^v^^^v^^^v") );
        assertEquals("vv^^^^^vvvv^vvvv^^^^v^vv^vvv^vvv^vv^^v^v^^v^v^v^vv^^^v",1, Santa.basement("vv^^^^^vvvv^vvvv^^^^v^vv^vvv^vvv^vv^^v^v^^v^v^v^vv^^^v") );
        assertEquals("vv^v^^^v^v^v^v^^^^^v^^vvvv^v^^^^^vvvv^v^v^^v^v^vv^vvvv^",1, Santa.basement("vv^v^^^v^v^v^v^^^^^v^^vvvv^v^^^^^vvvv^v^v^^v^v^vv^vvvv^") );
        assertEquals("vvv^^v^^^vv^v^^^vvv^v^v^vvv^^^^v^^vvvv^^^^^vvv^^^vv^vv^^",1, Santa.basement("vvv^^v^^^vv^v^^^vvv^v^v^vvv^^^^v^^vvvv^^^^^vvv^^^vv^vv^^") );
        assertEquals("v^v^^vv^vvv^v^v^^v^v^^v^v^^^v^^v^^^vv^^vv^v^^^^^vvvvv^^^v",1, Santa.basement("v^v^^vv^vvv^v^v^^v^v^^v^v^^^v^^v^^^vv^^vv^v^^^^^vvvvv^^^v") );
        assertEquals("vv^v^v^v^^v^v^^^^^v^vv^v^v^^vv^^^^v^v^vvv^^v^vv^vv^vv^^^^v",1, Santa.basement("vv^v^v^v^^v^v^^^^^v^vv^v^v^^vv^^^^v^v^vvv^^v^vv^vv^vv^^^^v") );
        assertEquals("^^^v^v^v^v^^^v^^^^v^^vvvvv^v^v^^v^^^^vvvvvv^^^v^v^vvvvvv^^v",-1, Santa.basement("^^^v^v^v^v^^^v^^^^v^^vvvvv^v^v^^v^^^^vvvvvv^^^v^v^vvvvvv^^v") );
        assertEquals("vv^^v^^vv^vv^v^vvv^^^vvvv^^vv^^v^^v^v^^v^^vv^vvv^vvvv^^^vv^v",1, Santa.basement("vv^^v^^vv^vv^v^vvv^^^vvvv^^vv^^v^^v^v^^v^^vv^vvv^vvvv^^^vv^v") );
        assertEquals("v^vv^^^vv^^^v^v^^v^v^^vv^v^^^vvvv^^vvvvvvvvvv^^^^^^v^^v^vvvvv",1, Santa.basement("v^vv^^^vv^^^v^v^^v^v^^vv^v^^^vvvv^^vvvvvvvvvv^^^^^^v^^v^vvvvv") );
        assertEquals("vvv^vv^^^vv^vv^^vv^v^v^vv^^^^vv^^v^^vv^^^vvv^vv^vvv^vvv^^v^vv^",1, Santa.basement("vvv^vv^^^vv^vv^^vv^v^v^vv^^^^vv^^v^^vv^^^vvv^vv^vvv^vvv^^v^vv^") );
        assertEquals("vv^v^^v^vv^vv^^vv^vvv^vvvvvv^^^vv^vvvv^vvv^vvvvv^vvv^^^vvv^v^vv",1, Santa.basement("vv^v^^v^vv^vv^^vv^vvv^vvvvvv^^^vv^vvvv^vvv^vvvvv^vvv^^^vvv^v^vv") );
        assertEquals("^vvv^v^v^^v^^v^v^vv^vvv^v^v^^^v^^v^v^^vvvvv^vv^v^^^v^^vvvvvv^vv^",3, Santa.basement("^vvv^v^v^^v^^v^v^vv^vvv^v^v^^^v^^v^v^^vvvvv^vv^v^^^v^^vvvvvv^vv^") );
        assertEquals("v^v^^^^^^^^v^vv^^^vv^vvv^^vvv^^v^vvv^^^^^^v^v^^^v^^^vv^^^v^^^vv^^",1, Santa.basement("v^v^^^^^^^^v^vv^^^vv^vvv^^vvv^^v^vvv^^^^^^v^v^^^v^^^vv^^^v^^^vv^^") );
        assertEquals("vvvvv^v^v^vv^^vvvv^vvv^^v^^^^vvvv^vvv^^^vvvvvv^^^vvv^v^v^vv^v^vv^v",1, Santa.basement("vvvvv^v^v^vv^^vvvv^vvv^^v^^^^vvvv^vvv^^^vvvvvv^^^vvv^v^v^vv^v^vv^v") );
        assertEquals("^v^v^vv^v^^^^v^v^^vvv^^vvvv^v^^^^vvv^^^^^vv^v^^v^v^v^^^vv^vv^v^v^v^",7, Santa.basement("^v^v^vv^v^^^^v^v^^vvv^^vvvv^v^^^^vvv^^^^^vv^v^^v^v^v^^^vv^vv^v^v^v^") );
        assertEquals("^^vv^^vvv^^^v^v^^^^vvvv^^^v^v^^^^vvv^^vv^vv^v^^vvvv^^vv^v^v^^v^v^^^v",9, Santa.basement("^^vv^^vvv^^^v^v^^^^vvvv^^^v^v^^^^vvv^^vv^vv^v^^vvvv^^vv^v^v^^v^v^^^v") );
        assertEquals("v^^^v^v^^^^vvv^vv^v^v^v^vv^^vv^^v^vvv^^^^^v^^v^^v^v^v^vvv^^v^vv^vv^vv",1, Santa.basement("v^^^v^v^^^^vvv^vv^v^v^v^vv^^vv^^v^vvv^^^^^v^^v^^v^v^v^vvv^^v^vv^vv^vv") );
        assertEquals("^vvv^^v^^^v^v^^^vv^vvv^^v^^vvvv^^^v^v^^^vv^v^^^v^vv^vv^^^^^vvv^^^v^vvv",3, Santa.basement("^vvv^^v^^^v^v^^^vv^vvv^^v^^vvvv^^^v^v^^^vv^v^^^v^vv^vv^^^^^vvv^^^v^vvv") );
        assertEquals("^v^v^^^^^v^vv^vv^vv^^v^^vvv^^v^vv^v^^^^^^^^^^^^^^v^v^^vvv^^v^v^^^^v^v^^",-1, Santa.basement("^v^v^^^^^v^vv^vv^vv^^v^^vvv^^v^vv^v^^^^^^^^^^^^^^v^v^^vvv^^v^v^^^^v^v^^") );
        assertEquals("^^^vvvv^^v^^vvvv^^v^v^^v^^v^v^^^^vv^vv^^v^^v^v^^^v^vvvv^vv^^v^vv^^v^^^^v",7, Santa.basement("^^^vvvv^^v^^vvvv^^v^v^^v^^v^v^^^^vv^vv^^v^^v^v^^^v^vvvv^vv^^v^vv^^v^^^^v") );
        assertEquals("vv^vv^^v^^v^^v^^^^^^^vvv^vv^vvvv^v^^^^^v^v^^vvvvv^v^^v^v^v^^v^^vvvvv^^v^v",1, Santa.basement("vv^vv^^v^^v^^v^^^^^^^vvv^vv^vvvv^v^^^^^v^v^^vvvvv^v^^v^v^v^^v^^vvvvv^^v^v") );
        assertEquals("v^v^v^^v^v^^vvvv^v^v^^vv^^v^^vvv^^vvv^^vvv^^^^^v^vvvvv^^v^vvvv^^^v^v^^^v^^",1, Santa.basement("v^v^v^^v^v^^vvvv^v^v^^vv^^v^^vvv^^vvv^^vvv^^^^^v^vvvvv^^v^vvvv^^^v^v^^^v^^") );
        assertEquals("vvvvv^v^^^^^vvv^v^^vv^^vvvvvvvvv^vvvvvvv^^^^vv^v^^vv^vvv^vv^^v^vv^^v^^^v^^v",1, Santa.basement("vvvvv^v^^^^^vvv^v^^vv^^vvvvvvvvv^vvvvvvv^^^^vv^v^^vv^vvv^vv^^v^vv^^v^^^v^^v") );
        assertEquals("vvvvvvv^vvvv^v^v^v^vvv^vv^^v^^vv^vvvvv^vvv^v^v^^v^vv^vv^vv^v^^^^v^^^^^vvv^^v",1, Santa.basement("vvvvvvv^vvvv^v^v^v^vvv^vv^^v^^vv^vvvvv^vvv^v^v^^v^vv^vv^vv^v^^^^v^^^^^vvv^^v") );
        assertEquals("vvvvv^^vv^^v^vv^^v^^vvvvv^^vv^vvvvvv^vvvvv^v^^v^vv^^^^^^^^^^^v^v^^v^vv^^v^^^^",1, Santa.basement("vvvvv^^vv^^v^vv^^v^^vvvvv^^vv^vvvvvv^vvvvv^v^^v^vv^^^^^^^^^^^v^v^^v^vv^^v^^^^") );
        assertEquals("^v^vv^v^^^vvvvv^^^v^v^^^v^vv^^^vvvvvv^v^vv^v^vv^^vv^vvv^v^v^v^^^^vv^v^^^^vv^^v",5, Santa.basement("^v^vv^v^^^vvvvv^^^v^v^^^v^vv^^^vvvvvv^v^vv^v^vv^^vv^vvv^v^v^v^^^^vv^v^^^^vv^^v") );
        assertEquals("^vv^^v^vvv^v^^^v^vvvv^^v^vv^vvv^vv^^vv^vvvvv^^vvvv^^vvv^vvv^^v^vvv^v^^v^v^^vvv^",3, Santa.basement("^vv^^v^vvv^v^^^v^vvvv^^v^vv^vvv^vv^^vv^vvvvv^^vvvv^^vvv^vvv^^v^vvv^v^^v^v^^vvv^") );
        assertEquals("^vv^vvv^^v^^^^^^^vvvv^^^^v^^v^v^vvvvvv^vv^v^vv^^^^vvv^^^vvv^^^vvv^^vvv^^v^^vvvvv",3, Santa.basement("^vv^vvv^^v^^^^^^^vvvv^^^^v^^v^v^vvvvvv^vv^v^vv^^^^vvv^^^vvv^^^vvv^^vvv^^v^^vvvvv") );
        assertEquals("^vvvv^v^^^^^^v^v^v^^^^^vv^v^v^^v^^^vvv^^^v^vvv^vv^vvvv^vv^v^^^v^^v^^v^^^v^^v^vvvv",3, Santa.basement("^vvvv^v^^^^^^v^v^v^^^^^vv^v^v^^v^^^vvv^^^v^vvv^vv^vvvv^vv^v^^^v^^v^^v^^^v^^v^vvvv") );
        assertEquals("v^^vvv^^v^^vvv^^^vvv^^^v^^^vv^v^^v^vv^vvv^vvv^^v^vv^v^vvv^vv^^v^vvvvv^v^vv^^vvv^v^",1, Santa.basement("v^^vvv^^v^^vvv^^^vvv^^^v^^^vv^v^^v^vv^vvv^vvv^^v^vv^v^vvv^vv^^v^vvvvv^v^vv^^vvv^v^") );
        assertEquals("vvv^vvvvvvv^v^^v^^vv^^vvv^v^v^^v^^vv^^^^^^^vvv^v^vv^^^vv^^^vvvvvvvvv^v^^v^v^^^vvv^v",1, Santa.basement("vvv^vvvvvvv^v^^v^^vv^^vvv^v^v^^v^^vv^^^^^^^vvv^v^vv^^^vv^^^vvvvvvvvv^v^^v^v^^^vvv^v") );
        assertEquals("vvv^vv^v^vv^^^^v^v^^v^^^^v^v^vvvvvv^^^^vvv^^vvv^^^vvv^^vvv^^^^vv^v^^vv^v^^^v^v^vv^^^",1, Santa.basement("vvv^vv^v^vv^^^^v^v^^v^^^^v^v^vvvvvv^^^^vvv^^vvv^^^vvv^^vvv^^^^vv^v^^vv^v^^^v^v^vv^^^") );
        assertEquals("^vvvv^v^^vv^vvv^^^^^vv^vv^^^^^vv^^v^^vv^v^v^^^^v^^vv^^^vvvv^vvvvv^v^^v^vv^^v^vvv^^^v^",3, Santa.basement("^vvvv^v^^vv^vvv^^^^^vv^vv^^^^^vv^^v^^vv^v^v^^^^v^^vv^^^vvvv^vvvvv^v^^v^vv^^v^vvv^^^v^") );
        assertEquals("^v^v^^^^vv^v^vvv^vv^^^^v^^v^v^v^vv^v^v^^^v^v^^^v^v^vv^vvvvv^^vv^vvvv^vvvvvv^^vvvvv^vv^",19, Santa.basement("^v^v^^^^vv^v^vvv^vv^^^^v^^v^v^v^vv^v^v^^^v^v^^^v^v^vv^vvvvv^^vv^vvvv^vvvvvv^^vvvvv^vv^") );
        assertEquals("^^vv^v^v^v^^^^v^vv^vv^v^vv^v^v^^^^^^vv^vv^^^^^^^^vvv^^^^v^v^^vv^vvvv^vv^^v^^^^^vvvvv^^v",-1, Santa.basement("^^vv^v^v^v^^^^v^vv^vv^v^vv^v^v^^^^^^vv^vv^^^^^^^^vvv^^^^v^v^^vv^vvvv^vv^^v^^^^^vvvvv^^v") );
        assertEquals("v^vv^v^^vv^v^^^v^vvv^^v^vv^^^^vv^v^^v^^^v^^^^vvv^v^v^^v^^vv^^^^^^v^^vv^^v^vvvvvvvv^^vvv^",1, Santa.basement("v^vv^v^^vv^v^^^v^vvv^^v^vv^^^^vv^v^^v^^^v^^^^vvv^v^v^^v^^vv^^^^^^v^^vv^^v^vvvvvvvv^^vvv^") );
        assertEquals("v^^^vv^^^vv^v^^^^vvvvvvvv^^v^v^^^v^vvv^v^^vvvvvvvvvvv^^vv^v^vv^^v^^^^^v^^v^vvvv^^v^^^^^^^",1, Santa.basement("v^^^vv^^^vv^v^^^^vvvvvvvv^^v^v^^^v^vvv^v^^vvvvvvvvvvv^^vv^v^vv^^v^^^^^v^^v^vvvv^^v^^^^^^^") );
        assertEquals("v^^v^^^v^^vvvvv^v^v^vvvv^^v^v^^^vvv^vv^v^vv^vv^vv^^^^^vvvvvv^^vvv^^vvv^v^vv^vvvvvv^vvv^^^v",1, Santa.basement("v^^v^^^v^^vvvvv^v^v^vvvv^^v^v^^^vvv^vv^v^vv^vv^vv^^^^^vvvvvv^^vvv^^vvv^v^vv^vvvvvv^vvv^^^v") );
        assertEquals("vv^^^v^^v^vvvvvvvvv^v^^v^v^vvv^^^vv^v^^^^vvvvv^^^^v^v^vvvv^^^vv^^^v^vv^^vvv^^vvvv^v^vvvv^v^",1, Santa.basement("vv^^^v^^v^vvvvvvvvv^v^^v^v^vvv^^^vv^v^^^^vvvvv^^^^v^v^vvvv^^^vv^^^v^vv^^vvv^^vvvv^v^vvvv^v^") );
        assertEquals("v^^vv^^vvv^vv^^vvvv^v^^^^vvv^vv^^v^^^v^v^vv^v^v^v^^vv^vv^vv^^v^vv^vv^vv^vvvv^v^v^^v^vvvv^vv^",1, Santa.basement("v^^vv^^vvv^vv^^vvvv^v^^^^vvv^vv^^v^^^v^v^vv^v^v^v^^vv^vv^vv^^v^vv^vv^vv^vvvv^v^v^^v^vvvv^vv^") );
        assertEquals("v^^^^vv^v^^v^v^vvvv^^v^vvvvv^vv^v^vvv^^^^v^vvv^^vv^vvv^^v^vv^^^vv^vv^v^^vvvvv^vvvv^^vv^vv^v^v",1, Santa.basement("v^^^^vv^v^^v^v^vvvv^^v^vvvvv^vv^v^vvv^^^^v^vvv^^vv^vvv^^v^vv^^^vv^vv^v^^vvvvv^vvvv^^vv^vv^v^v") );
        assertEquals("v^v^^v^^^^v^vv^vv^vv^vv^vvv^^v^v^^v^^^v^^^v^vvv^^^v^v^vvvvvv^v^v^vvvvv^^^^^vvv^^^^^v^v^v^vv^^v",1, Santa.basement("v^v^^v^^^^v^vv^vv^vv^vv^vvv^^v^v^^v^^^v^^^v^vvv^^^v^v^vvvvvv^v^v^vvvvv^^^^^vvv^^^^^v^v^v^vv^^v") );
        assertEquals("^^^^v^^^^^vv^vv^vvvvv^^vvv^^vvv^v^^^^v^^^^^^vvvv^vv^v^v^v^^vv^^^v^^vvvvvv^v^^vv^vv^^vv^vv^^vv^v",31, Santa.basement("^^^^v^^^^^vv^vv^vvvvv^^vvv^^vvv^v^^^^v^^^^^^vvvv^vv^v^v^v^^vv^^^v^^vvvvvv^v^^vv^vv^^vv^vv^^vv^v") );
        assertEquals("^^v^v^vvvvvvvv^^^v^vv^v^v^vv^v^^^^v^vv^^^vvv^^v^vvv^^vv^v^vvvvv^^^^vvv^^v^^v^vvvvv^^v^^vv^vv^v^v",9, Santa.basement("^^v^v^vvvvvvvv^^^v^vv^v^v^vv^v^^^^v^vv^^^vvv^^v^vvv^^vv^v^vvvvv^^^^vvv^^v^^v^vvvvv^^v^^vv^vv^v^v") );
        assertEquals("vvvv^^^vv^^vv^vv^vvvvv^^vv^^vv^^^^v^v^v^vvvvv^^^vvvv^^^vvv^^^^^vv^vv^^v^vv^v^vvvv^v^^^^vvv^^^^v^^",1, Santa.basement("vvvv^^^vv^^vv^vv^vvvvv^^vv^^vv^^^^v^v^v^vvvvv^^^vvvv^^^vvv^^^^^vv^vv^^v^vv^v^vvvv^v^^^^vvv^^^^v^^") );
        assertEquals("v^vv^v^^v^v^vv^^v^v^v^vv^^v^v^^v^^v^v^v^v^v^^^^vvvvvv^^v^^^^^^v^v^^^^vvvv^vv^vvvv^^^^v^^v^vv^^^vv^",1, Santa.basement("v^vv^v^^v^v^vv^^v^v^v^vv^^v^v^^v^^v^v^v^v^v^^^^vvvvvv^^v^^^^^^v^v^^^^vvvv^vv^vvvv^^^^v^^v^vv^^^vv^") );
        assertEquals("^v^^^vv^v^v^^^^^^^^^vvvvvvv^^v^vv^v^vvv^v^^^^v^v^v^vv^v^v^^^^^vvvv^v^^vv^vv^^v^^^vvv^^vvvvvvvv^vvvv",93, Santa.basement("^v^^^vv^v^v^^^^^^^^^vvvvvvv^^v^vv^v^vvv^v^^^^v^v^v^vv^v^v^^^^^vvvv^v^^vv^vv^^v^^^vvv^^vvvvvvvv^vvvv") );
        assertEquals("^^vv^vvvv^v^v^v^^^vvvv^v^v^^^v^vv^v^^^^^v^vv^v^^v^^^v^^v^v^^vvv^^vvvv^^vvvv^^^^^^^^^^v^vvv^^vvv^v^^^",7, Santa.basement("^^vv^vvvv^v^v^v^^^vvvv^v^v^^^v^vv^v^^^^^v^vv^v^^v^^^v^^v^v^^vvv^^vvvv^^vvvv^^^^^^^^^^v^vvv^^vvv^v^^^") );
        scoring.updateScore("lang:common_list_test_scoring_name",20);
    }

    @Test
    public void range() {
        assertEquals("v",2, Santa.range("v") );
        assertEquals("vv",3, Santa.range("vv") );
        assertEquals("^vv",3, Santa.range("^vv") );
        assertEquals("^^v^",3, Santa.range("^^v^") );
        assertEquals("v^v^v",2, Santa.range("v^v^v") );
        assertEquals("vv^v^v",3, Santa.range("vv^v^v") );
        assertEquals("v^vvvv^",5, Santa.range("v^vvvv^") );
        assertEquals("^^^vvvv^",5, Santa.range("^^^vvvv^") );
        assertEquals("^vv^^v^vv",3, Santa.range("^vv^^v^vv") );
        assertEquals("^^^v^^v^^v",6, Santa.range("^^^v^^v^^v") );
        assertEquals("v^vvv^vv^^v",5, Santa.range("v^vvv^vv^^v") );
        assertEquals("^^vvv^v^vvv^",6, Santa.range("^^vvv^v^vvv^") );
        assertEquals("^vvvvv^vv^^^^",7, Santa.range("^vvvvv^vv^^^^") );
        assertEquals("v^^^^v^vv^^v^^",6, Santa.range("v^^^^v^vv^^v^^") );
        assertEquals("^vvvvvvvvv^^^^v",10, Santa.range("^vvvvvvvvv^^^^v") );
        assertEquals("v^v^v^v^v^^^vvvv",5, Santa.range("v^v^v^v^v^^^vvvv") );
        assertEquals("^^^^^vvv^^v^v^^^^",8, Santa.range("^^^^^vvv^^v^v^^^^") );
        assertEquals("^^v^^vvvvv^v^vvv^^",8, Santa.range("^^v^^vvvvv^v^vvv^^") );
        assertEquals("vvvvvv^^vv^^vv^^vvv",8, Santa.range("vvvvvv^^vv^^vv^^vvv") );
        assertEquals("vv^^v^v^^^v^^vvvv^vv",6, Santa.range("vv^^v^v^^^v^^vvvv^vv") );
        assertEquals("^v^vvvvvvvv^vvvvvv^^^",14, Santa.range("^v^vvvvvvvv^vvvvvv^^^") );
        assertEquals("^vvvvvv^v^^v^v^^vv^v^v",7, Santa.range("^vvvvvv^v^^v^v^^vv^v^v") );
        assertEquals("v^vv^^vv^^^^v^vv^vvvv^v",6, Santa.range("v^vv^^vv^^^^v^vv^vvvv^v") );
        assertEquals("^^^v^vv^vv^vvv^vvvvvvvv^",13, Santa.range("^^^v^vv^vv^vvv^vvvvvvvv^") );
        assertEquals("vvv^v^^^v^vv^^^^vv^v^^vv^",6, Santa.range("vvv^v^^^v^vv^^^^vv^v^^vv^") );
        assertEquals("^vv^^vvvv^vvvvvv^^vv^^v^vv",10, Santa.range("^vv^^vvvv^vvvvvv^^vv^^v^vv") );
        assertEquals("^v^^v^v^v^v^vvvv^v^vvv^vvv^",9, Santa.range("^v^^v^v^v^v^vvvv^v^vvv^vvv^") );
        assertEquals("^v^^^v^^vvvvv^vvv^^^vvv^^^^^",8, Santa.range("^v^^^v^^vvvvv^vvv^^^vvv^^^^^") );
        assertEquals("v^^^^vvvv^^^^^^^vv^^vvvv^vvvv",8, Santa.range("v^^^^vvvv^^^^^^^vv^^vvvv^vvvv") );
        assertEquals("vv^^vvv^vvvv^vv^vvvvv^^^v^^vvv",12, Santa.range("vv^^vvv^vvvv^vv^vvvvv^^^v^^vvv") );
        assertEquals("^^^v^^^v^^v^vv^^v^^v^vv^vvvvv^v",8, Santa.range("^^^v^^^v^^v^vv^^v^^v^vv^vvvvv^v") );
        assertEquals("vv^^vv^v^^vvv^^^v^^vv^^^vvvvvvv^",8, Santa.range("vv^^vv^v^^vvv^^^v^^vv^^^vvvvvvv^") );
        assertEquals("^v^vv^^vvv^^^^^^v^vv^^^v^^^v^vv^^",10, Santa.range("^v^vv^^vvv^^^^^^v^vv^^^v^^^v^vv^^") );
        assertEquals("vv^^vv^^v^^^vvv^vvv^^^^^v^^^v^v^^v",9, Santa.range("vv^^vv^^v^^^vvv^vvv^^^^^v^^^v^v^^v") );
        assertEquals("v^v^^vvvv^vv^v^^^vv^vvv^vv^^^^v^v^v",8, Santa.range("v^v^^vvvv^vv^v^^^vv^vvv^vv^^^^v^v^v") );
        assertEquals("v^v^vv^^^vvv^^v^^^^^vv^v^^v^v^v^^vvv",8, Santa.range("v^v^vv^^^vvv^^v^^^^^vv^v^^v^v^v^^vvv") );
        assertEquals("^v^^^v^vv^vv^v^^vvv^vvv^^^v^vv^^^v^^^",7, Santa.range("^v^^^v^vv^vv^v^^vvv^vvv^^^v^vv^^^v^^^") );
        assertEquals("v^^v^^vvvv^v^vv^^v^^vvvvv^^^^vvvvv^v^^",9, Santa.range("v^^v^^vvvv^v^vv^^v^^vvvvv^^^^vvvvv^v^^") );
        assertEquals("^^^vvv^^v^^vvv^vv^^vv^^^^v^v^v^v^vv^^^^",7, Santa.range("^^^vvv^^v^^vvv^vv^^vv^^^^v^v^v^v^vv^^^^") );
        assertEquals("v^v^vvv^^^v^^^vvvvv^vv^^v^v^^^vvvvvvvv^^",11, Santa.range("v^v^vvv^^^v^^^vvvvv^vv^^v^v^^^vvvvvvvv^^") );
        assertEquals("^v^vvvv^vvvvv^v^v^v^^vv^vv^v^^^vv^^vv^v^^",10, Santa.range("^v^vvvv^vvvvv^v^v^v^^vv^vv^v^^^vv^^vv^v^^") );
        assertEquals("vv^v^^^^^vv^^vvv^vvv^vv^vv^^v^^vvvvvvvvvvv",16, Santa.range("vv^v^^^^^vv^^vvv^vvv^vv^vv^^v^^vvvvvvvvvvv") );
        assertEquals("^^v^v^v^^^v^v^v^^^^^^vv^^^^^^^^^vv^^^v^v^^v",19, Santa.range("^^v^v^v^^^v^v^v^^^^^^vv^^^^^^^^^vv^^^v^v^^v") );
        assertEquals("vv^vv^vv^^vv^^vvv^vv^^^^^v^vvvvv^^^vv^vv^^^v",7, Santa.range("vv^vv^vv^^vv^^vvv^vv^^^^^v^vvvvv^^^vv^vv^^^v") );
        assertEquals("vv^^v^^^^v^^^vvvvv^vvvvvvvvvv^v^^v^vvv^vv^vv^",18, Santa.range("vv^^v^^^^v^^^vvvvv^vvvvvvvvvv^v^^v^vvv^vv^vv^") );
        assertEquals("v^^vv^^v^^^^vv^vvvvv^^vv^vvvv^^v^^v^^^^^vvv^^v",10, Santa.range("v^^vv^^v^^^^vv^vvvvv^^vv^vvvv^^v^^v^^^^^vvv^^v") );
        assertEquals("v^^v^vv^v^^^v^^^vvvvvvv^v^^^v^^^vvv^v^^^^v^vvvv",8, Santa.range("v^^v^vv^v^^^v^^^vvvvvvv^v^^^v^^^vvv^v^^^^v^vvvv") );
        assertEquals("vvv^^v^v^^v^vv^^v^^v^vvv^^^vvvvvv^vvv^vvvv^vv^v^",13, Santa.range("vvv^^v^v^^v^vv^^v^^v^vvv^^^vvvvvv^vvv^vvvv^vv^v^") );
        assertEquals("v^v^v^^v^^^^vv^^^^^vv^^^v^v^vv^v^^v^^^v^v^^^vvvv^",14, Santa.range("v^v^v^^v^^^^vv^^^^^vv^^^v^v^vv^v^^v^^^v^v^^^vvvv^") );
        assertEquals("v^^^vv^vv^^v^^v^^v^^^^vvv^^^^^v^vvvv^vvvvvv^vv^vvv",13, Santa.range("v^^^vv^vv^^v^^v^^v^^^^vvv^^^^^v^vvvv^vvvvvv^vv^vvv") );
        assertEquals("v^v^v^^^^^v^^^v^v^v^^^v^vvv^^vvvvv^^^vv^^v^^^vv^^^v",10, Santa.range("v^v^v^^^^^v^^^v^v^v^^^v^vvv^^vvvvv^^^vv^^v^^^vv^^^v") );
        assertEquals("v^vvv^v^^vvvvvv^vvv^^^vvv^v^vvvv^vv^vv^^v^v^^vv^^v^v",15, Santa.range("v^vvv^v^^vvvvvv^vvv^^^vvv^v^vvvv^vv^vv^^v^v^^vv^^v^v") );
        assertEquals("^^v^^v^vvv^vv^vv^^vv^^^v^v^v^^vv^vv^^v^^^^^^v^^vvv^vv",10, Santa.range("^^v^^v^vvv^vv^vv^^vv^^^v^v^v^^vv^vv^^v^^^^^^v^^vvv^vv") );
        assertEquals("^^^vvvvv^v^v^^vvvv^^^^^^vvvv^^vv^^^v^vv^^v^vv^v^^vvvv^",8, Santa.range("^^^vvvvv^v^v^^vvvv^^^^^^vvvv^^vv^^^v^vv^^v^vv^v^^vvvv^") );
        assertEquals("^vvvv^vvvv^^^vv^v^^^v^vv^vvv^v^vv^^^^vv^^^v^vvv^vv^^v^^",9, Santa.range("^vvvv^vvvv^^^vv^v^^^v^vv^vvv^v^vv^^^^vv^^^v^vvv^vv^^v^^") );
        assertEquals("vv^^vvv^^^^^v^vv^^vvvvv^v^^vvv^v^v^^v^v^^^^v^vvvv^^^vvv^",7, Santa.range("vv^^vvv^^^^^v^vv^^vvvvv^v^^vvv^v^v^^v^v^^^^v^vvvv^^^vvv^") );
        assertEquals("vvvv^vvvvvvvvvv^vv^^^vvv^v^^vv^vv^^vvvv^^vv^vv^v^^^v^v^^^",19, Santa.range("vvvv^vvvvvvvvvv^vv^^^vvv^v^^vv^vv^^vvvv^^vv^vv^v^^^v^v^^^") );
        assertEquals("vvvvvvv^v^vvv^^vvvv^v^^^v^^v^v^^vv^vvv^^^^vv^^v^^^vv^vv^v^",12, Santa.range("vvvvvvv^v^vvv^^vvvv^v^^^v^^v^v^^vv^vvv^^^^vv^^v^^^vv^vv^v^") );
        assertEquals("^vvvvv^^^^^vv^^^v^^^vv^^^vv^vvvv^vv^^^vvv^vv^^^^v^^v^^^v^^^",12, Santa.range("^vvvvv^^^^^vv^^^v^^^vv^^^vv^vvvv^vv^^^vvv^vv^^^^v^^v^^^v^^^") );
        assertEquals("^^v^v^v^v^vv^^v^v^^^v^^^vv^^^^vvvv^v^vv^^vvvvvvv^vvvv^v^v^vv",15, Santa.range("^^v^v^v^v^vv^^v^v^^^v^^^vv^^^^vvvv^v^vv^^vvvvvvv^vvvv^v^v^vv") );
        assertEquals("vvv^vv^^vv^^v^^^v^^^^v^^vvv^^v^^^^v^v^vv^^^^vv^^^^v^^^v^v^v^v",17, Santa.range("vvv^vv^^vv^^v^^^v^^^^v^^vvv^^v^^^^v^v^vv^^^^vv^^^^v^^^v^v^v^v") );
        assertEquals("vv^vv^^vv^v^v^^vvvvvvv^^^v^^^v^v^^v^^vvvvv^^^^^vvv^vvv^vvvv^^^",10, Santa.range("vv^vv^^vv^v^v^^vvvvvvv^^^v^^^v^v^^v^^vvvvv^^^^^vvv^vvv^vvvv^^^") );
        assertEquals("^v^^^^^^^^^v^v^^^^^^v^v^v^vv^v^v^vvvv^^^v^vvvvv^v^^vv^^vv^vvvvv",15, Santa.range("^v^^^^^^^^^v^v^^^^^^v^v^v^vv^v^v^vvvv^^^v^vvvvv^v^^vv^^vv^vvvvv") );
        assertEquals("^v^v^^^^v^^^^^^^^^vvv^v^^^^vv^vv^vvv^v^^vv^vv^vvv^vv^vvvvvvvvvv^",19, Santa.range("^v^v^^^^v^^^^^^^^^vvv^v^^^^vv^vv^vvv^v^^vv^vv^vvv^vv^vvvvvvvvvv^") );
        assertEquals("^vvvvv^vvvv^vvvv^^^v^^vv^^^v^^v^v^^v^^^^^^^^^vvv^vv^^vvv^v^v^^vvv",16, Santa.range("^vvvvv^vvvv^vvvv^^^v^^vv^^^v^^v^v^^v^^^^^^^^^vvv^vv^^vvv^v^v^^vvv") );
        assertEquals("vv^vv^v^v^vvv^^^^vv^v^^v^^^^vv^vvv^^v^v^^v^^v^^v^^v^^^^vvvvvvv^^vv",13, Santa.range("vv^vv^v^v^vvv^^^^vv^v^^v^^^^vv^vvv^^v^v^^v^^v^^v^^v^^^^vvvvvvv^^vv") );
        assertEquals("^v^^v^^^vv^^^vv^^vvvv^^v^v^vvv^^^v^vvv^vv^vvv^^^vvv^vvvv^v^^^^^^vv^",12, Santa.range("^v^^v^^^vv^^^vv^^vvvv^^v^v^vvv^^^v^vvv^vv^vvv^^^vvv^vvvv^v^^^^^^vv^") );
        assertEquals("v^^v^^vv^v^v^^vv^vv^^v^vvvv^v^vvv^vv^v^^^^^vv^^^^vvv^vv^vv^^v^vv^v^v",9, Santa.range("v^^v^^vv^v^v^^vv^vv^^v^vvvv^v^vvv^vv^v^^^^^vv^^^^vvv^vv^vv^^v^vv^v^v") );
        assertEquals("^v^v^^v^^vvvvvv^v^v^vv^^v^v^^vv^vvv^^v^^v^vv^^vv^v^vv^vvvv^v^^vv^^v^v",12, Santa.range("^v^v^^v^^vvvvvv^v^v^vv^^v^v^^vv^vvv^^v^^v^vv^^vv^v^vv^vvvv^v^^vv^^v^v") );
        assertEquals("^^^vvvv^v^^vvvv^v^v^^^vv^vvv^^v^vvv^vvv^^^vvv^vvv^^^v^vvv^vvvvvvv^^vvv",20, Santa.range("^^^vvvv^v^^vvvv^v^v^^^vv^vvv^^v^vvv^vvv^^^vvv^vvv^^^v^vvv^vvvvvvv^^vvv") );
        assertEquals("^v^^^v^v^v^^^^vvv^^^^^v^vvvvv^^vv^^^^vv^v^^vv^^^vvvvvvvv^vv^^vvvv^^vv^v",12, Santa.range("^v^^^v^v^v^^^^vvv^^^^^v^vvvvv^^vv^^^^vv^v^^vv^^^vvvvvvvv^vv^^vvvv^^vv^v") );
        assertEquals("^v^^^^v^vvvv^v^v^vvv^^v^v^vv^^^v^v^v^vv^^v^^v^^vv^^^^^vv^^vvvv^vvvv^vvvv",11, Santa.range("^v^^^^v^vvvv^v^v^vvv^^v^v^vv^^^v^v^v^vv^^v^^v^^vv^^^^^vv^^vvvv^vvvv^vvvv") );
        assertEquals("vv^^^vvvv^v^^^vvv^^vv^vvv^v^^^vvvvv^vv^vv^v^v^vv^^v^vvv^vv^^vvv^vvvv^v^^v",18, Santa.range("vv^^^vvvv^v^^^vvv^^vv^vvv^v^^^vvvvv^vv^vv^v^v^vv^^v^vvv^vv^^vvv^vvvv^v^^v") );
        assertEquals("^v^vv^^^vvvv^vvv^^^^^^v^v^v^^^^vv^vvvvv^^vv^^v^^^v^v^vv^v^^v^vvv^vv^v^v^vv",10, Santa.range("^v^vv^^^vvvv^vvv^^^^^^v^v^v^^^^vv^vvvvv^^vv^^v^^^v^v^vv^v^^v^vvv^vv^v^v^vv") );
        assertEquals("^^v^^^^^v^^vv^^^^vvvvv^vvv^^v^^vv^^^vvv^^^^v^^v^^vv^^vv^^vvv^^^^vvv^v^^^^vv",12, Santa.range("^^v^^^^^v^^vv^^^^vvvvv^vvv^^v^^vv^^^vvv^^^^v^^v^^vv^^vv^^vvv^^^^vvv^v^^^^vv") );
        assertEquals("^^vvv^vv^vvvv^vv^^v^^^^^^vv^^^vvvvv^^^vv^v^v^^v^v^v^v^^^v^^vvvvvv^v^v^v^^v^v",10, Santa.range("^^vvv^vv^vvvv^vv^^v^^^^^^vv^^^vvvvv^^^vv^v^v^^v^v^v^v^^^v^^vvvvvv^v^v^v^^v^v") );
        assertEquals("v^^vvvv^vvvvvvv^^^vvv^v^^^v^vv^^^^^vv^vv^v^^^vvvv^^v^^^^v^v^^^^^v^^vv^^vv^^^v",14, Santa.range("v^^vvvv^vvvvvvv^^^vvv^v^^^v^vv^^^^^vv^vv^v^^^vvvv^^v^^^^v^v^^^^^v^^vv^^vv^^^v") );
        assertEquals("^^vv^vv^v^^^v^^vvvv^v^^v^^vvvv^^^^^v^^v^vv^^v^^v^^^^vv^^^v^^vvv^v^vvvv^^vvv^^v",13, Santa.range("^^vv^vv^v^^^v^^vvvv^v^^v^^vvvv^^^^^v^^v^vv^^v^^v^^^^vv^^^v^^vvv^v^vvvv^^vvv^^v") );
        assertEquals("^^^^^^v^v^v^vv^v^^^vvv^^vv^v^v^^^^^^^^vvv^^^^v^v^^^^v^vvv^v^vvvv^^v^^^v^^vvvv^v",17, Santa.range("^^^^^^v^v^v^vv^v^^^vvv^^vv^v^v^^^^^^^^vvv^^^^v^v^^^^v^vvv^v^vvvv^^v^^^v^^vvvv^v") );
        assertEquals("v^vv^v^v^vv^v^^v^^^v^v^v^vv^vvv^^^v^^v^^v^^^^v^^^vvvv^vvv^^^^^vv^v^vv^vvvvvv^^^^",11, Santa.range("v^vv^v^v^vv^v^^v^^^v^v^v^vv^vvv^^^v^^v^^v^^^^v^^^vvvv^vvv^^^^^vv^v^vv^vvvvvv^^^^") );
        assertEquals("vvvv^v^v^^v^^v^vvvvvv^v^v^v^vvvvv^^vv^v^^v^v^vv^vvvvvvvvv^^v^vv^v^vv^vv^^v^^v^v^^",22, Santa.range("vvvv^v^v^^v^^v^vvvvvv^v^v^v^vvvvv^^vv^v^^v^v^vv^vvvvvvvvv^^v^vv^v^vv^vv^^v^^v^v^^") );
        assertEquals("v^^^^^v^^^^v^vv^vvvvvvvv^v^^^vvvvvvvv^v^vv^vvvv^vv^vvv^vv^^^^vv^vv^v^vv^^v^vvvv^v^",25, Santa.range("v^^^^^v^^^^v^vv^vvvvvvvv^v^^^vvvvvvvv^v^vv^vvvv^vv^vvv^vv^^^^vv^vv^v^vv^^v^vvvv^v^") );
        assertEquals("vv^^vvvvv^^v^v^^^vv^vv^vvvvv^^vvv^vvv^^vv^^^^vv^vv^^^^v^^^^v^^^vvvv^^v^v^v^^^^vvv^^",12, Santa.range("vv^^vvvvv^^v^v^^^vv^vv^vvvvv^^vvv^vvv^^vv^^^^vv^vv^^^^v^^^^v^^^vvvv^^v^v^v^^^^vvv^^") );
        assertEquals("v^^vvvvvv^vvvv^^vv^^^^vv^^^^v^^v^vvv^^^v^^v^^v^vvvv^^vvv^^^v^^v^^^^^vvvvvvv^vvv^vv^v",13, Santa.range("v^^vvvvvv^vvvv^^vv^^^^vv^^^^v^^v^vvv^^^v^^v^^v^vvvv^^vvv^^^v^^v^^^^^vvvvvvv^vvv^vv^v") );
        assertEquals("^v^vvv^^v^vv^^v^^v^v^^vv^^^^v^v^vv^v^v^v^v^v^vv^v^^^v^v^^^v^vv^vv^vv^^v^^vvvvv^^^v^vv",9, Santa.range("^v^vvv^^v^vv^^v^^v^v^^vv^^^^v^v^vv^v^v^v^v^v^vv^v^^^v^v^^^v^vv^vv^vv^^v^^vvvvv^^^v^vv") );
        assertEquals("v^^^vvvvvv^^^^vvv^vv^vv^^vv^^^v^v^vv^vv^v^v^v^^^v^vv^^^vvvv^^^^^vvv^^vvvvv^vv^^v^v^^^v",10, Santa.range("v^^^vvvvvv^^^^vvv^vv^vv^^vv^^^v^v^vv^vv^v^v^v^^^v^vv^^^vvvv^^^^^vvv^^vvvvv^vv^^v^v^^^v") );
        assertEquals("^^vv^vv^vv^v^^v^^^^^^vv^v^vv^^v^v^^^vvvvv^^v^^vv^^v^^^^^^vvvv^^^^v^^v^vvvvv^v^vvv^vv^^^",13, Santa.range("^^vv^vv^vv^v^^v^^^^^^vv^v^vv^^v^v^^^vvvvv^^v^^vv^^v^^^^^^vvvv^^^^v^^v^vvvvv^v^vvv^vv^^^") );
        assertEquals("^^vv^^vv^vvv^^vvv^^vv^^^^^^^^^v^^vv^^^v^^^^v^^vvv^v^vvvvv^vv^vvv^vvvv^v^^vv^v^^^^^^^v^^v",16, Santa.range("^^vv^^vv^vvv^^vvv^^vv^^^^^^^^^v^^vv^^^v^^^^v^^vvv^v^vvvvv^vv^vvv^vvvv^v^^vv^v^^^^^^^v^^v") );
        assertEquals("v^vvvv^v^v^vv^^vvv^^vvv^v^vvvvv^vvv^v^^^vv^v^^^^^^^v^v^vv^v^^^^vv^^vvvvvv^v^v^^v^v^vvv^^^",14, Santa.range("v^vvvv^v^v^vv^^vvv^^vvv^v^vvvvv^vvv^v^^^vv^v^^^^^^^v^v^vv^v^^^^vv^^vvvvvv^v^v^^v^v^vvv^^^") );
        assertEquals("vv^^v^^^vvvv^vv^^v^^^vv^^^v^v^^^^v^vv^^v^^^^^vvv^v^^^^^^v^^^v^v^v^vv^v^^^vvvvv^vvvvv^^v^^^",19, Santa.range("vv^^v^^^vvvv^vv^^v^^^vv^^^v^v^^^^v^vv^^v^^^^^vvv^v^^^^^^v^^^v^v^v^vv^v^^^vvvvv^vvvvv^^v^^^") );
        assertEquals("vvv^^v^v^^vv^vv^^^^vv^^^^^^vvv^vvvv^v^v^v^vvv^v^vvv^v^v^^^^^^v^vvvvv^^^^v^^^vv^^vv^vv^^^^^v",11, Santa.range("vvv^^v^v^^vv^vv^^^^vv^^^^^^vvv^vvvv^v^v^v^vvv^v^vvv^v^v^^^^^^v^vvvvv^^^^v^^^vv^^vv^vv^^^^^v") );
        assertEquals("^^^v^v^^v^vv^vvv^^vv^^v^v^^^^vv^^v^^v^vvvvv^vvvvv^vvv^v^v^v^^^vv^^vv^v^v^v^v^v^^vv^^^vv^^vv^",12, Santa.range("^^^v^v^^v^vv^vvv^^vv^^v^v^^^^vv^^v^^v^vvvvv^vvvvv^vvv^v^v^v^^^vv^^vv^v^v^v^v^v^^vv^^^vv^^vv^") );
        assertEquals("vv^^vv^vv^^^vvv^vvvvv^^vv^vvvv^^vv^vv^^^vv^^^vvv^^vvvvvv^^vvv^^vv^vvv^^v^^v^vvv^v^^v^^vv^^v^^",18, Santa.range("vv^^vv^vv^^^vvv^vvvvv^^vv^vvvv^^vv^vv^^^vv^^^vvv^^vvvvvv^^vvv^^vv^vvv^^v^^v^vvv^v^^v^^vv^^v^^") );
        assertEquals("^v^vv^^v^v^v^vv^vvvvvvv^v^vv^^^^^vvvv^^v^^^^^^vvvv^^^vv^vv^^^vvvvvv^^^v^^^vv^vv^^vv^^^vvvvv^vv",10, Santa.range("^v^vv^^v^v^v^vv^vvvvvvv^v^vv^^^^^vvvv^^v^^^^^^vvvv^^^vv^vv^^^vvvvvv^^^v^^^vv^vv^^vv^^^vvvvv^vv") );
        assertEquals("vvvv^v^v^^^vvvvv^vvv^v^^vv^^v^^v^^^^vv^v^^v^vvvvv^vv^vvv^^vvv^v^^vv^v^vv^v^^v^^^^^^^v^vv^^v^v^^",13, Santa.range("vvvv^v^v^^^vvvvv^vvv^v^^vv^^v^^v^^^^vv^v^^v^vvvvv^vv^vvv^^vvv^v^^vv^v^vv^v^^v^^^^^^^v^vv^^v^v^^") );
        assertEquals("^vv^v^^^^^^vvv^^^^v^vv^^vv^vvv^^^^v^vvv^^^vv^vv^v^^^vvv^^^v^vvv^^v^v^vv^^^v^vv^v^^v^v^^v^vvv^^v^",9, Santa.range("^vv^v^^^^^^vvv^^^^v^vv^^vv^vvv^^^^v^vvv^^^vv^vv^v^^^vvv^^^v^vvv^^v^v^vv^^^v^vv^v^^v^v^^v^vvv^^v^") );
        assertEquals("v^v^vvv^vvvvv^^v^vv^vvv^^^^v^^^^v^^^^^^^v^^vv^vvv^vv^^^vvv^v^v^v^^v^^^^vv^^^^^v^vv^^^^^^^^v^v^vvv",24, Santa.range("v^v^vvv^vvvvv^^v^vv^vvv^^^^v^^^^v^^^^^^^v^^vv^vvv^vv^^^vvv^v^v^v^^v^^^^vv^^^^^v^vv^^^^^^^^v^v^vvv") );
        assertEquals("^^^^vvvvvvv^vv^v^^^vv^^^vvvvv^^v^v^vv^^v^vv^^vvv^^^vv^v^^vvv^^vv^^^^vv^vvvv^^v^^^^v^vvvvv^v^v^v^^v",12, Santa.range("^^^^vvvvvvv^vv^v^^^vv^^^vvvvv^^v^v^vv^^v^vv^^vvv^^^vv^v^^vvv^^vv^^^^vv^vvvv^^v^^^^v^vvvvv^v^v^v^^v") );
        assertEquals("^v^^v^^^^^^vvv^vv^v^^^^v^vvvvv^^v^v^v^v^^v^vvv^vvvvvvv^v^v^^^vv^v^^vv^vvv^vv^vv^vv^vv^^^^^^^v^^^v^^",17, Santa.range("^v^^v^^^^^^vvv^vv^v^^^^v^vvvvv^^v^v^v^v^^v^vvv^vvvvvvv^v^v^^^vv^v^^vv^vvv^vv^vv^vv^vv^^^^^^^v^^^v^^") );
        assertEquals("v^v^v^vv^vvv^^^v^^^^^^vvvv^^^v^^v^vv^v^^v^^^^v^vvv^^^vv^v^v^^v^vvvvv^v^v^^^vv^vv^vvv^^vvv^^^^^^vvvv^",12, Santa.range("v^v^v^vv^vvv^^^v^^^^^^vvvv^^^v^^v^vv^v^^v^^^^v^vvv^^^vv^v^v^^v^vvvvv^v^v^^^vv^vv^vvv^^vvv^^^^^^vvvv^") );
        scoring.updateScore("lang:common_list_test_scoring_name",20);
    }

    @Test
    public void direct() {
        assertEquals("^","^", Santa.direct("^") );
        assertEquals("v^","", Santa.direct("v^") );
        assertEquals("^^^","^^^", Santa.direct("^^^") );
        assertEquals("vvv^","vv", Santa.direct("vvv^") );
        assertEquals("v^^^v","^", Santa.direct("v^^^v") );
        assertEquals("^^^vv^","^^", Santa.direct("^^^vv^") );
        assertEquals("vvv^v^v","vvv", Santa.direct("vvv^v^v") );
        assertEquals("vv^^^^v^","^^", Santa.direct("vv^^^^v^") );
        assertEquals("v^^vv^^v^","^", Santa.direct("v^^vv^^v^") );
        assertEquals("v^vv^v^vv^","vv", Santa.direct("v^vv^v^vv^") );
        assertEquals("v^vv^vvv^^^","v", Santa.direct("v^vv^vvv^^^") );
        assertEquals("^vv^v^v^vvvv","vvvv", Santa.direct("^vv^v^v^vvvv") );
        assertEquals("^v^v^^^^^v^v^","^^^^^", Santa.direct("^v^v^^^^^v^v^") );
        assertEquals("^^vvv^^v^vv^^v","", Santa.direct("^^vvv^^v^vv^^v") );
        assertEquals("^^vv^^^^^vvvv^^","^^^", Santa.direct("^^vv^^^^^vvvv^^") );
        assertEquals("vvv^vv^v^^^v^^^v","", Santa.direct("vvv^vv^v^^^v^^^v") );
        assertEquals("^^v^^v^vv^^^vvvvv","v", Santa.direct("^^v^^v^vv^^^vvvvv") );
        assertEquals("^v^vv^vv^vv^^v^vv^","vv", Santa.direct("^v^vv^vv^vv^^v^vv^") );
        assertEquals("vvv^^^^vv^^vvvvvv^v","vvvvv", Santa.direct("vvv^^^^vv^^vvvvvv^v") );
        assertEquals("vvv^vvvvvvvv^^v^^^^^","vvvv", Santa.direct("vvv^vvvvvvvv^^v^^^^^") );
        assertEquals("v^v^^vvvv^v^v^vvvv^v^","vvvvv", Santa.direct("v^v^^vvvv^v^v^vvvv^v^") );
        assertEquals("vv^vv^^v^^^^vvvvvvv^^v","vvvv", Santa.direct("vv^vv^^v^^^^vvvvvvv^^v") );
        assertEquals("vvvvvv^v^^vvv^vvvvv^vvv","vvvvvvvvvvvvv", Santa.direct("vvvvvv^v^^vvv^vvvvv^vvv") );
        assertEquals("^^^^v^vv^vv^^v^^vvv^^^^v","^^^^", Santa.direct("^^^^v^vv^vv^^v^^vvv^^^^v") );
        assertEquals("v^^^vvvv^^^^^vv^^^vvv^v^v","^", Santa.direct("v^^^vvvv^^^^^vv^^^vvv^v^v") );
        assertEquals("^^^vvvv^^^vv^vv^vv^^v^v^^v","", Santa.direct("^^^vvvv^^^vv^vv^vv^^v^v^^v") );
        assertEquals("^v^^v^vvv^v^^vv^v^v^vv^^^v^","^", Santa.direct("^v^^v^vvv^v^^vv^v^v^vv^^^v^") );
        assertEquals("v^vvvvvvv^^v^^v^vv^vvvvvvvvv","vvvvvvvvvvvvvv", Santa.direct("v^vvvvvvv^^v^^v^vv^vvvvvvvvv") );
        assertEquals("^^v^^^vvv^^vvv^v^vvvv^v^vvvv^","vvvvv", Santa.direct("^^v^^^vvv^^vvv^v^vvvv^v^vvvv^") );
        assertEquals("^vv^v^^vvvvv^v^v^^v^vv^^^v^^v^","", Santa.direct("^vv^v^^vvvvv^v^v^^v^vv^^^v^^v^") );
        assertEquals("vv^^^^vvv^vvv^v^^v^vvv^vv^v^^vv","vvvvv", Santa.direct("vv^^^^vvv^vvv^v^^v^vvv^vv^v^^vv") );
        assertEquals("^^^^^^vv^^^^v^^v^^^vvvvvv^^vvv^v","^^^^", Santa.direct("^^^^^^vv^^^^v^^v^^^vvvvvv^^vvv^v") );
        assertEquals("^v^vv^vvvvv^v^vvv^^^vv^^^^^vv^vv^","vvv", Santa.direct("^v^vv^vvvvv^v^vvv^^^vv^^^^^vv^vv^") );
        assertEquals("vvvv^^v^v^^v^vvvv^vvvvvvv^vvvv^^vv","vvvvvvvvvvvvvv", Santa.direct("vvvv^^v^v^^v^vvvv^vvvvvvv^vvvv^^vv") );
        assertEquals("^^^^v^^vvvv^vvv^vvv^^v^vv^vv^v^^^vv","vvv", Santa.direct("^^^^v^^vvvv^vvv^vvv^^v^vv^vv^v^^^vv") );
        assertEquals("v^vvv^^^^v^^vv^v^^^^vv^vv^^vvvv^^vvv","vv", Santa.direct("v^vvv^^^^v^^vv^v^^^^vv^vv^^vvvv^^vvv") );
        assertEquals("^^^vv^^vv^v^^^^^^vv^^v^vvv^vv^^vv^vv^","^^^", Santa.direct("^^^vv^^vv^v^^^^^^vv^^v^vvv^vv^^vv^vv^") );
        assertEquals("vv^v^^^^v^^vvv^v^^v^^vv^v^vv^^v^vvvvvv","vvvv", Santa.direct("vv^v^^^^v^^vvv^v^^v^^vv^v^vv^^v^vvvvvv") );
        assertEquals("^vvvv^v^v^vvvvv^^vv^^vvvv^^^v^v^v^^^^v^","vvv", Santa.direct("^vvvv^v^v^vvvvv^^vv^^vvvv^^^v^v^v^^^^v^") );
        assertEquals("^^v^^vvvv^^^vvvv^^v^vv^^v^^vv^^^^v^^vvvv","", Santa.direct("^^v^^vvvv^^^vvvv^^v^vv^^v^^vv^^^^v^^vvvv") );
        assertEquals("^^^^vvvv^vv^vvvvvvvvv^^v^^vvv^^^^vv^^v^v^","vvvvv", Santa.direct("^^^^vvvv^vv^vvvvvvvvv^^v^^vvv^^^^vv^^v^v^") );
        assertEquals("vv^^vvv^vvv^^v^^vvv^vvvv^^^^v^^^^vvv^^^^v^","", Santa.direct("vv^^vvv^vvv^^v^^vvv^vvvv^^^^v^^^^vvv^^^^v^") );
        assertEquals("v^^^^^^^v^^^vv^v^v^v^^^vvvvvv^^^^vvvvv^v^^^","^^^^^", Santa.direct("v^^^^^^^v^^^vv^v^v^v^^^vvvvvv^^^^vvvvv^v^^^") );
        assertEquals("^^^^^v^^vv^v^vvvvvvvv^^^^v^^v^v^v^v^^^^v^vv^","^^^^", Santa.direct("^^^^^v^^vv^v^vvvvvvvv^^^^v^^v^v^v^v^^^^v^vv^") );
        assertEquals("vv^vv^vv^v^v^vv^vvvv^vv^^^v^vvvv^v^vv^^v^^vv^","vvvvvvvvv", Santa.direct("vv^vv^vv^v^v^vv^vvvv^vv^^^v^vvvv^v^vv^^v^^vv^") );
        assertEquals("vvv^v^^v^^vvv^v^^^v^v^^v^^^^^^v^^^vvv^^^v^vv^v","^^^^^^", Santa.direct("vvv^v^^v^^vvv^v^^^v^v^^v^^^^^^v^^^vvv^^^v^vv^v") );
        assertEquals("v^^vvvvv^^vvv^^v^v^^v^^^vv^vv^vvvv^^vvv^^v^v^v^","vvvvv", Santa.direct("v^^vvvvv^^vvv^^v^v^^v^^^vv^vv^vvvv^^vvv^^v^v^v^") );
        assertEquals("vvvv^^^v^^^vv^^^^^vv^^v^v^vv^^vv^^^v^^^^^^^vv^vv","^^^^^^^^", Santa.direct("vvvv^^^v^^^vv^^^^^vv^^v^v^vv^^vv^^^v^^^^^^^vv^vv") );
        assertEquals("vv^^^^vvvvvv^^^v^^v^^^^vvvv^vvv^^^v^v^^vv^^v^^v^v","^", Santa.direct("vv^^^^vvvvvv^^^v^^v^^^^vvvv^vvv^^^v^v^^vv^^v^^v^v") );
        assertEquals("v^v^v^vv^v^v^^^^^v^v^v^v^^v^v^^^v^vv^^v^v^^^^^vvv^","^^^^^^^^", Santa.direct("v^v^v^vv^v^v^^^^^v^v^v^v^^v^v^^^v^vv^^v^v^^^^^vvv^") );
        assertEquals("^v^^v^v^^vv^^^vv^^v^vvv^^^^^vv^^v^v^^^^^^vv^vv^vv^^","^^^^^^^^^", Santa.direct("^v^^v^v^^vv^^^vv^^v^vvv^^^^^vv^^v^v^^^^^^vv^vv^vv^^") );
        assertEquals("^^^v^v^v^v^v^^^^^^vv^^^v^vv^v^vv^^vvvvv^v^^vvvv^v^v^","^^", Santa.direct("^^^v^v^v^v^v^^^^^^vv^^^v^vv^v^vv^^vvvvv^v^^vvvv^v^v^") );
        assertEquals("^^vvv^v^vv^^^^v^^v^^^^^vvv^vv^vv^v^^^vv^^^^vvvvvv^v^v","^", Santa.direct("^^vvv^v^vv^^^^v^^v^^^^^vvv^vv^vv^v^^^vv^^^^vvvvvv^v^v") );
        assertEquals("vvvvvv^^v^^^vv^^^v^^vvvv^^^vv^vv^^vvv^^^v^vvvvv^^^v^vv","vvvvvv", Santa.direct("vvvvvv^^v^^^vv^^^v^^vvvv^^^vv^vv^^vvv^^^v^vvvvv^^^v^vv") );
        assertEquals("v^^vvv^^v^vv^^vv^v^v^^^v^^vvvvvv^vv^^^vvv^v^^^v^^v^^v^^","^", Santa.direct("v^^vvv^^v^vv^^vv^v^v^^^v^^vvvvvv^vv^^^vvv^v^^^v^^v^^v^^") );
        assertEquals("v^vv^v^vvv^^v^v^vvvv^vv^^v^^v^v^^v^v^^^^^^^v^v^^vvvv^^^v","^^", Santa.direct("v^vv^v^vvv^^v^v^vvvv^vv^^v^^v^v^^v^v^^^^^^^v^v^^vvvv^^^v") );
        assertEquals("^^vvv^^^^^^vvvv^vvvvv^^vvvv^^^vv^^^^^^vvv^^^vv^vv^^v^vvvv","vvv", Santa.direct("^^vvv^^^^^^vvvv^vvvvv^^vvvv^^^vv^^^^^^vvv^^^vv^vv^^v^vvvv") );
        assertEquals("^v^v^^^^vv^^^^vvvv^v^vvv^vv^^v^^^^v^^v^v^^^^^^v^v^vvv^^^^^","^^^^^^^^^^^^", Santa.direct("^v^v^^^^vv^^^^vvvv^v^vvv^vv^^v^^^^v^^v^v^^^^^^v^v^vvv^^^^^") );
        assertEquals("^^vv^vvv^v^vvvvv^^^^^v^vvv^^vvvvv^vv^^^vvvv^^^^^^^^^^v^vvv^","v", Santa.direct("^^vv^vvv^v^vvvvv^^^^^v^vvv^^vvvvv^vv^^^vvvv^^^^^^^^^^v^vvv^") );
        assertEquals("^^v^^^vvvvvv^vvv^^^^^^^vv^^^vvv^^v^^vv^v^^^^v^^vv^v^vvvvv^vv","", Santa.direct("^^v^^^vvvvvv^vvv^^^^^^^vv^^^vvv^^v^^vv^v^^^^v^^vv^v^vvvvv^vv") );
        assertEquals("^vv^^v^^^vv^vv^v^vv^v^^^^^v^vv^vvv^v^v^vvv^^vv^vvv^^v^^^^v^^v","^", Santa.direct("^vv^^v^^^vv^vv^v^vv^v^^^^^v^vv^vvv^v^v^vvv^^vv^vvv^^v^^^^v^^v") );
        assertEquals("^vv^vvv^vvvv^vv^v^^vvv^vvv^^^^^v^vv^^^vvvv^^^^^^vv^v^^v^v^v^^^","", Santa.direct("^vv^vvv^vvvv^vv^v^^vvv^vvv^^^^^v^vv^^^vvvv^^^^^^vv^v^^v^v^v^^^") );
        assertEquals("^v^^^^vvvv^v^vvvvvvvvvvvvvvvvv^^vv^v^vvvv^^^^^^vvv^vvvvv^^vv^^^","vvvvvvvvvvvvvvvvv", Santa.direct("^v^^^^vvvv^v^vvvvvvvvvvvvvvvvv^^vv^v^vvvv^^^^^^vvv^vvvvv^^vv^^^") );
        assertEquals("vv^^^v^^v^vvv^^v^^^v^vvvv^^^vv^^^v^v^vv^v^vvv^vv^^^^v^^^^vvvvvv^","", Santa.direct("vv^^^v^^v^vvv^^v^^^v^vvvv^^^vv^^^v^v^vv^v^vvv^vv^^^^v^^^^vvvvvv^") );
        assertEquals("^vv^v^^^vv^vv^v^vv^^v^vv^v^v^vv^^^v^^vv^v^^v^v^^vv^^v^vv^^^^v^^^v","^^^^^", Santa.direct("^vv^v^^^vv^vv^v^vv^^v^vv^v^v^vv^^^v^^vv^v^^v^v^^vv^^v^vv^^^^v^^^v") );
        assertEquals("^^^^vv^vvv^^vvvvvvvvvv^vvvvv^^v^^^v^^^^^^v^^v^v^v^vvv^vvv^^v^v^^v^","vvvv", Santa.direct("^^^^vv^vvv^^vvvvvvvvvv^vvvvv^^v^^^v^^^^^^v^^v^v^v^vvv^vvv^^v^v^^v^") );
        assertEquals("v^^^^^vv^^v^^^^v^^vv^vv^v^v^vv^^^^^v^^vvvv^vvvv^v^v^vvv^^v^^^v^^^^v","^^^^^^^", Santa.direct("v^^^^^vv^^v^^^^v^^vv^vv^v^v^vv^^^^^v^^vvvv^vvvv^v^v^vvv^^v^^^v^^^^v") );
        assertEquals("vvvv^vvv^vv^^v^^vv^v^v^^^v^^^v^vvvv^^v^^^^^^^^^v^vvv^v^v^vvv^^v^^^^^","^^^^^^", Santa.direct("vvvv^vvv^vv^^v^^vv^v^v^^^v^^^v^vvvv^^v^^^^^^^^^v^vvv^v^v^vvv^^v^^^^^") );
        assertEquals("^v^^^vv^v^v^^^vvvv^v^vv^v^vvvvv^^vv^^v^^vvv^vv^vv^vvv^^^v^v^^vv^^vvv^","vvvvvvv", Santa.direct("^v^^^vv^v^v^^^vvvv^v^vv^v^vvvvv^^vv^^v^^vvv^vv^vv^vvv^^^v^v^^vv^^vvv^") );
        assertEquals("v^vv^^vv^^^^^vvv^v^^vv^vv^v^^^vv^vvvv^^v^v^v^v^^^^v^^^vv^^vvv^^^v^v^v^","^^^^", Santa.direct("v^vv^^vv^^^^^vvv^v^^vv^vv^v^^^vv^vvvv^^v^v^v^v^^^^v^^^vv^^vvv^^^v^v^v^") );
        assertEquals("^vv^^^v^^^^vv^vv^^vvv^^vv^v^^v^^^^vv^vvvv^^v^^^^^v^vvvvv^^vv^^v^v^vvv^v","^", Santa.direct("^vv^^^v^^^^vv^vv^^vvv^^vv^v^^v^^^^vv^vvvv^^v^^^^^v^vvvvv^^vv^^v^v^vvv^v") );
        assertEquals("^^v^v^^v^^^^vv^v^v^^^^vv^v^vv^v^vvv^^^v^v^^vvv^^^^^^^v^^vv^vvvvvvvvvv^vv","", Santa.direct("^^v^v^^v^^^^vv^v^v^^^^vv^v^vv^v^vvv^^^v^v^^vvv^^^^^^^v^^vv^vvvvvvvvvv^vv") );
        assertEquals("v^vvvv^vvv^^v^vvvvvvv^^^^vv^v^^^^vv^vvv^^^v^^^v^^^^vv^^^^v^^v^^^^^v^^v^^v","^^^^^^^", Santa.direct("v^vvvv^vvv^^v^vvvvvvv^^^^vv^v^^^^vv^vvv^^^v^^^v^^^^vv^^^^v^^v^^^^^v^^v^^v") );
        assertEquals("^^vvvvvvv^^^vvv^v^v^^^vvv^^vvvv^^^vv^vvv^vvvvvvv^vv^v^vvvv^^v^^^vv^^vvv^^^","vvvvvvvvvvvvvv", Santa.direct("^^vvvvvvv^^^vvv^v^v^^^vvv^^vvvv^^^vv^vvv^vvvvvvv^vv^v^vvvv^^v^^^vv^^vvv^^^") );
        assertEquals("vvv^^^^^^vv^^vvvv^vvvvv^^v^vv^v^v^^vvvv^^^^v^^^vv^^^v^^v^vvv^v^v^^^v^v^^^^v","^^^", Santa.direct("vvv^^^^^^vv^^vvvv^vvvvv^^v^vv^v^v^^vvvv^^^^v^^^vv^^^v^^v^vvv^v^v^^^v^v^^^^v") );
        assertEquals("v^^^^vv^v^v^^vv^^^^^^vv^vvvv^^^^v^^^v^vv^v^v^^vvv^v^^^v^vv^^^^^v^vvvv^^^^^v^","^^^^^^^^^^^^", Santa.direct("v^^^^vv^v^v^^vv^^^^^^vv^vvvv^^^^v^^^v^vv^v^v^^vvv^v^^^v^vv^^^^^v^vvvv^^^^^v^") );
        assertEquals("v^^v^vv^vv^vv^^^vv^v^^v^^v^^v^v^vvvv^vv^^^^^^vvvvv^vvv^^^vvvv^v^v^^^^vv^vv^v^","vvv", Santa.direct("v^^v^vv^vv^vv^^^vv^v^^v^^v^^v^v^vvvv^vv^^^^^^vvvvv^vvv^^^vvvv^v^v^^^^vv^vv^v^") );
        assertEquals("vvv^v^^^vvvvvv^^^^^v^^^^vv^^^^^vvv^^v^^^vvvvvv^^^vvv^^^^^v^^vv^vvv^^v^vvv^vv^v","", Santa.direct("vvv^v^^^vvvvvv^^^^^v^^^^vv^^^^^vvv^^v^^^vvvvvv^^^vvv^^^^^v^^vv^vvv^^v^vvv^vv^v") );
        assertEquals("vv^^vv^^^vvv^^vvvv^vvv^vvvvvvv^vv^^^^^vvv^vv^^v^vvvvv^^v^v^v^vv^^v^v^^^vvv^^^vv","vvvvvvvvvvvvv", Santa.direct("vv^^vv^^^vvv^^vvvv^vvv^vvvvvvv^vv^^^^^vvv^vv^^v^vvvvv^^v^v^v^vv^^v^v^^^vvv^^^vv") );
        assertEquals("^^^^vvvvvvvv^^v^^vvvvvvvvvvv^^v^^vvvv^^vvv^vvvv^^^^^^vvvv^^vvv^v^v^v^v^vv^v^vv^^","vvvvvvvvvvvvvvvv", Santa.direct("^^^^vvvvvvvv^^v^^vvvvvvvvvvv^^v^^vvvv^^vvv^vvvv^^^^^^vvvv^^vvv^v^v^v^v^vv^v^vv^^") );
        assertEquals("^^^^^v^^v^^^v^v^vvv^vvvv^vv^^^^v^^^^^vvv^v^^^^^^^vv^^^v^^vv^vv^vv^v^vv^^^^^vv^^vv","^^^^^^^^^^^^^", Santa.direct("^^^^^v^^v^^^v^v^vvv^vvvv^vv^^^^v^^^^^vvv^v^^^^^^^vv^^^v^^vv^vv^vv^v^vv^^^^^vv^^vv") );
        assertEquals("^v^vvvv^v^^vvvv^^^^v^vv^vvvv^^vv^v^^v^^^vvvv^^vv^^v^^v^v^v^v^^^^^^^^^vv^vv^vvvv^^v","", Santa.direct("^v^vvvv^v^^vvvv^^^^v^vv^vvvv^^vv^v^^v^^^vvvv^^vv^^v^^v^v^v^v^^^^^^^^^vv^vv^vvvv^^v") );
        assertEquals("v^v^vvv^^vvvvv^^^^v^^^^vv^^^^vv^^v^^vvvv^^^vvv^vv^vvvvv^^v^v^^^vvv^^^^vv^vv^v^^^^v^","^", Santa.direct("v^v^vvv^^vvvvv^^^^v^^^^vv^^^^vv^^v^^vvvv^^^vvv^vv^vvvvv^^v^v^^^vvv^^^^vv^vv^v^^^^v^") );
        assertEquals("vv^vv^vvvvv^^v^vvv^vvv^^^^vvv^v^vv^^vv^^^^^^v^^vv^^^vv^^vv^^vvv^vv^^^v^^vv^^v^vvvvvv","vvvvvvvv", Santa.direct("vv^vv^vvvvv^^v^vvv^vvv^^^^vvv^v^vv^^vv^^^^^^v^^vv^^^vv^^vv^^vvv^vv^^^v^^vv^^v^vvvvvv") );
        assertEquals("vvv^vv^vvv^^^vv^vvvvvv^v^v^^^^v^v^^v^v^^vvvv^^vvv^^vv^vvvv^v^^^^v^^^vvv^v^^vvvvvv^vvv","vvvvvvvvvvvvvvv", Santa.direct("vvv^vv^vvv^^^vv^vvvvvv^v^v^^^^v^v^^v^v^^vvvv^^vvv^^vv^vvvv^v^^^^v^^^vvv^v^^vvvvvv^vvv") );
        assertEquals("v^^^^vvvv^^^vv^v^^^vv^^v^v^^^v^^vvv^vvvvvv^vvv^v^v^vv^^^^v^^^v^vvv^v^vv^^v^vvvv^vv^v^v","vvvvvv", Santa.direct("v^^^^vvvv^^^vv^v^^^vv^^v^v^^^v^^vvv^vvvvvv^vvv^v^v^vv^^^^v^^^v^vvv^v^vv^^v^vvvv^vv^v^v") );
        assertEquals("^^^^^vv^^vvvvv^^vv^^^^v^^vv^vvvvv^v^vvvvvvv^vv^v^^vv^v^v^^^v^^^^vv^v^v^^^v^vv^v^vvvvvv^","vvvvvvv", Santa.direct("^^^^^vv^^vvvvv^^vv^^^^v^^vv^vvvvv^v^vvvvvvv^vv^v^^vv^v^v^^^v^^^^vv^v^v^^^v^vv^v^vvvvvv^") );
        assertEquals("vv^v^^^v^^^vvv^vv^vvv^^vv^vvvv^vvv^v^v^vvv^^^^^^^^v^^^vvvv^vvvv^^v^v^^v^vv^^^v^v^^^vv^^v","vv", Santa.direct("vv^v^^^v^^^vvv^vv^vvv^^vv^vvvv^vvv^v^v^vvv^^^^^^^^v^^^vvvv^vvvv^^v^v^^v^vv^^^v^v^^^vv^^v") );
        assertEquals("v^vv^v^^^^^^v^vv^vvv^^^^^v^^^^^^^^^vv^^^^vvv^vv^v^^^v^^^vvvv^vvvvv^^v^^^^^vv^^vvv^^v^vvv^","^^^^^^^^^^^", Santa.direct("v^vv^v^^^^^^v^vv^vvv^^^^^v^^^^^^^^^vv^^^^vvv^vv^v^^^v^^^vvvv^vvvvv^^v^^^^^vv^^vvv^^v^vvv^") );
        assertEquals("vvv^^^v^^v^v^vvv^vvv^^v^v^vvvv^vv^vv^^vvvv^^vv^^vv^^^v^^^^vvvvvv^^^vvvvvv^vvvv^^^v^v^^v^vv","vvvvvvvvvvvvvv", Santa.direct("vvv^^^v^^v^v^vvv^vvv^^v^v^vvvv^vv^vv^^vvvv^^vv^^vv^^^v^^^^vvvvvv^^^vvvvvv^vvvv^^^v^v^^v^vv") );
        assertEquals("^v^^^v^^v^^vvvvv^vvvv^v^vv^v^v^v^v^v^v^vv^^v^v^^^v^^^v^vvv^^vvv^vv^^^^^vvvvvv^v^vvvv^vv^vv^","vvvvvvvvv", Santa.direct("^v^^^v^^v^^vvvvv^vvvv^v^vv^v^v^v^v^v^v^vv^^v^v^^^v^^^v^vvv^^vvv^vv^^^^^vvvvvv^v^vvvv^vv^vv^") );
        assertEquals("v^v^^^vvv^^^^v^^vv^^^^^^vv^vv^^v^^vv^v^vv^vvvvvvv^vv^vv^^^^^vv^^vv^vv^vv^^v^vvv^v^vvv^^vvv^v","vvvvvv", Santa.direct("v^v^^^vvv^^^^v^^vv^^^^^^vv^vv^^v^^vv^v^vv^vvvvvvv^vv^vv^^^^^vv^^vv^vv^vv^^v^vvv^v^vvv^^vvv^v") );
        assertEquals("^^v^v^^vvv^vvvvv^^v^^vvvvv^^^^^^^v^vv^^^^^^^vvvvv^vv^v^^vv^^v^vv^^^v^^^^v^v^vvv^v^vvv^v^vvv^v","v", Santa.direct("^^v^v^^vvv^vvvvv^^v^^vvvvv^^^^^^^v^vv^^^^^^^vvvvv^vv^v^^vv^^v^vv^^^v^^^^v^v^vvv^v^vvv^v^vvv^v") );
        assertEquals("v^v^^v^^vvv^^^^^^vvv^vv^^vvvvv^^vv^^^^vv^^^^v^^^^v^^^^^^^v^^^^^vvvvv^v^v^^vv^v^^^v^v^v^^vvvvv^","^^^^^^^^^^^^", Santa.direct("v^v^^v^^vvv^^^^^^vvv^vv^^vvvvv^^vv^^^^vv^^^^v^^^^v^^^^^^^v^^^^^vvvvv^v^v^^vv^v^^^v^v^v^^vvvvv^") );
        assertEquals("v^vv^v^^vvv^^vvv^v^vv^vvvv^vv^vv^vv^vvv^vvvv^v^vvv^^vv^^vv^^vv^^v^^vv^^^^vv^^^v^vv^v^^v^^v^vv^v","vvvvvvvvvvvvv", Santa.direct("v^vv^v^^vvv^^vvv^v^vv^vvvv^vv^vv^vv^vvv^vvvv^v^vvv^^vv^^vv^^vv^^v^^vv^^^^vv^^^v^vv^v^^v^^v^vv^v") );
        assertEquals("^v^^^v^^^v^vv^^^^^v^^^^vv^^^^^vvv^^^^^^^vv^vv^^vv^vvvvv^v^^vv^vv^v^v^^v^vvv^vv^v^^^^^^^v^^^vv^vv","^^^^^^^^^^^^^^", Santa.direct("^v^^^v^^^v^vv^^^^^v^^^^vv^^^^^vvv^^^^^^^vv^vv^^vv^vvvvv^v^^vv^vv^v^v^^v^vvv^vv^v^^^^^^^v^^^vv^vv") );
        assertEquals("^vv^v^^vvv^v^v^vv^v^vv^^vv^^vvv^v^vvvv^v^^^^v^vvvvvv^v^^^^v^^^v^^vvvv^^v^vv^vv^^^^^vv^^v^^^v^v^^^","^", Santa.direct("^vv^v^^vvv^v^v^vv^v^vv^^vv^^vvv^v^vvvv^v^^^^v^vvvvvv^v^^^^v^^^v^^vvvv^^v^vv^vv^^^^^vv^^v^^^v^v^^^") );
        assertEquals("vv^vv^^^v^^^^vvv^v^^v^^vvv^^vvvvv^^v^^v^v^^^v^v^vv^v^v^^^vv^^v^vvv^vvv^v^vvv^vvvvvvv^v^^^^^v^vvv^v","vvvvvvvv", Santa.direct("vv^vv^^^v^^^^vvv^v^^v^^vvv^^vvvvv^^v^^v^v^^^v^v^vv^v^v^^^vv^^v^vvv^vvv^v^vvv^vvvvvvv^v^^^^^v^vvv^v") );
        assertEquals("^v^vvv^vv^vvv^^^^^vvv^^vvvv^vvv^vv^v^^v^v^^v^v^^vv^v^vvvv^^^^vv^vv^vvv^^v^v^^^vvv^vvv^^^v^^^v^^vvvv","vvvvvvvvv", Santa.direct("^v^vvv^vv^vvv^^^^^vvv^^vvvv^vvv^vv^v^^v^v^^v^v^^vv^v^vvvv^^^^vv^vv^vvv^^v^v^^^vvv^vvv^^^v^^^v^^vvvv") );
        assertEquals("^^v^^^^v^^vvvv^vvv^^^^^v^vv^^vvvv^^vvv^^^v^^v^^v^v^vvvv^^v^vv^vvv^vvv^v^^^^v^v^^vv^vv^^^^vv^^vvvvvvv","vvvv", Santa.direct("^^v^^^^v^^vvvv^vvv^^^^^v^vv^^vvvv^^vvv^^^v^^v^^v^v^vvvv^^v^vv^vvv^vvv^v^^^^v^v^^vv^vv^^^^vv^^vvvvvvv") );
        scoring.updateScore("lang:common_list_test_scoring_name",20);
    }

    @Test
    public void mostVisited() {
        assertEquals("v",1, Santa.mostVisited("v") );
        assertEquals("^v",2, Santa.mostVisited("^v") );
        assertEquals("v^v",2, Santa.mostVisited("v^v") );
        assertEquals("^vv^",3, Santa.mostVisited("^vv^") );
        assertEquals("vvv^^",2, Santa.mostVisited("vvv^^") );
        assertEquals("^vv^^v",4, Santa.mostVisited("^vv^^v") );
        assertEquals("vvvvvvv",1, Santa.mostVisited("vvvvvvv") );
        assertEquals("v^^^vv^v",4, Santa.mostVisited("v^^^vv^v") );
        assertEquals("vv^^^v^v^",4, Santa.mostVisited("vv^^^v^v^") );
        assertEquals("v^^v^^vv^v",5, Santa.mostVisited("v^^v^^vv^v") );
        assertEquals("vvv^^^vvvv^",3, Santa.mostVisited("vvv^^^vvvv^") );
        assertEquals("v^^^^^^^vv^v",3, Santa.mostVisited("v^^^^^^^vv^v") );
        assertEquals("^^v^vvvv^v^v^",4, Santa.mostVisited("^^v^vvvv^v^v^") );
        assertEquals("^vv^^v^v^^^vv^",5, Santa.mostVisited("^vv^^v^v^^^vv^") );
        assertEquals("v^^v^vvvv^^^vvv",5, Santa.mostVisited("v^^v^vvvv^^^vvv") );
        assertEquals("^^^vvvvv^^^v^vv^",6, Santa.mostVisited("^^^vvvvv^^^v^vv^") );
        assertEquals("^vv^^^vv^v^^^vvvv",6, Santa.mostVisited("^vv^^^vv^v^^^vvvv") );
        assertEquals("^^vv^v^v^^^^v^v^^v",5, Santa.mostVisited("^^vv^v^v^^^^v^v^^v") );
        assertEquals("v^^^v^vvv^^^vv^^v^^",7, Santa.mostVisited("v^^^v^vvv^^^vv^^v^^") );
        assertEquals("^^vv^^v^^vvv^^vv^^^v",8, Santa.mostVisited("^^vv^^v^^vvv^^vv^^^v") );
        assertEquals("^^^vv^^v^^^^vvvv^^^vv",6, Santa.mostVisited("^^^vv^^v^^^^vvvv^^^vv") );
        assertEquals("^v^^v^^^^vvv^v^^^vv^vv",6, Santa.mostVisited("^v^^v^^^^vvv^v^^^vv^vv") );
        assertEquals("^^vv^^^v^^v^v^^vvvv^^vv",6, Santa.mostVisited("^^vv^^^v^^v^v^^vvvv^^vv") );
        assertEquals("^^vv^vv^^vvvv^vvv^vvvvv^",5, Santa.mostVisited("^^vv^vv^^vvvv^vvv^vvvvv^") );
        assertEquals("^v^^^^^vv^vvv^v^vv^^vv^^^",8, Santa.mostVisited("^v^^^^^vv^vvv^v^vv^^vv^^^") );
        assertEquals("vvvv^^vvv^vv^^^v^v^^vv^vvv",8, Santa.mostVisited("vvvv^^vvv^vv^^^v^v^^vv^vvv") );
        assertEquals("vv^^^^^v^^v^v^v^v^^v^vv^v^^",9, Santa.mostVisited("vv^^^^^v^^v^v^v^v^^v^vv^v^^") );
        assertEquals("^v^^^^vvvvv^^^^^vvvvvv^^^v^^",7, Santa.mostVisited("^v^^^^vvvvv^^^^^vvvvvv^^^v^^") );
        assertEquals("vv^^vv^v^v^vv^v^vvvv^v^^^vv^v",7, Santa.mostVisited("vv^^vv^v^v^vv^v^vvvv^v^^^vv^v") );
        assertEquals("vv^^^v^vv^^vvvvvv^vv^^v^^^^v^v",6, Santa.mostVisited("vv^^^v^vv^^vvvvvv^vv^^v^^^^v^v") );
        assertEquals("vv^^^^vv^^^^v^^v^^v^vv^vv^^vv^v",8, Santa.mostVisited("vv^^^^vv^^^^v^^v^^v^vv^vv^^vv^v") );
        assertEquals("v^^^^^^vvv^^vvv^^^vvv^^^v^^vvvvv",9, Santa.mostVisited("v^^^^^^vvv^^vvv^^^vvv^^^v^^vvvvv") );
        assertEquals("vvv^^^^^v^v^^^vv^vv^v^vv^^vv^^^^^",9, Santa.mostVisited("vvv^^^^^v^v^^^vv^vv^v^vv^^vv^^^^^") );
        assertEquals("vvvv^^v^^^^v^vv^vvvv^v^vvv^^v^vv^v",6, Santa.mostVisited("vvvv^^v^^^^v^vv^vvvv^v^vvv^^v^vv^v") );
        assertEquals("^^v^^^v^^v^v^v^^^^^vvv^vv^^vv^v^^^v",7, Santa.mostVisited("^^v^^^v^^v^v^v^^^^^vvv^vv^^vv^v^^^v") );
        assertEquals("^vvvvv^vv^^vvvvv^v^^^^^^vv^^vv^v^^^v",9, Santa.mostVisited("^vvvvv^vv^^vvvvv^v^^^^^^vv^^vv^v^^^v") );
        assertEquals("v^^^vv^v^v^v^vvvvvvvv^^^^^v^v^^v^^vv^",8, Santa.mostVisited("v^^^vv^v^v^v^vvvvvvvv^^^^^v^v^^v^^vv^") );
        assertEquals("vv^v^v^v^^v^v^vvvvv^v^vvv^vv^^vvv^v^^v",8, Santa.mostVisited("vv^v^v^v^^v^v^vvvvv^v^vvv^vv^^vvv^v^^v") );
        assertEquals("^vv^^v^v^v^^v^^^^vv^^^v^vvv^vvv^vv^vvv^",9, Santa.mostVisited("^vv^^v^v^v^^v^^^^vv^^^v^vvv^vvv^vv^vvv^") );
        assertEquals("vv^^^^v^^^vvv^^^vv^vv^v^^v^^v^v^^^^vvv^^",9, Santa.mostVisited("vv^^^^v^^^vvv^^^vv^vv^v^^v^^v^v^^^^vvv^^") );
        assertEquals("^v^^vv^^^^^v^^vv^vvv^^v^v^vv^^v^vv^^v^^vv",12, Santa.mostVisited("^v^^vv^^^^^v^^vv^vvv^^v^v^vv^^v^vv^^v^^vv") );
        assertEquals("^^v^vv^v^^v^^^^vvvvv^^vvv^^^^^v^v^^vv^^^vv",10, Santa.mostVisited("^^v^vv^v^^v^^^^vvvvv^^vvv^^^^^v^v^^vv^^^vv") );
        assertEquals("^vv^v^v^^vvvv^vvvvv^v^^v^v^^vvv^v^v^^vv^vvv",11, Santa.mostVisited("^vv^v^v^^vvvv^vvvvv^v^^v^v^^vvv^v^v^^vv^vvv") );
        assertEquals("vv^^^v^^v^vv^vv^^^vv^^vvv^vvvv^^v^^v^^vv^vvv",10, Santa.mostVisited("vv^^^v^^v^vv^vv^^^vv^^vvv^vvvv^^v^^v^^vv^vvv") );
        assertEquals("v^^vvvv^vv^v^v^v^vvvvv^v^v^vv^^v^^v^^^v^^v^vv",9, Santa.mostVisited("v^^vvvv^vv^v^v^v^vvvvv^v^v^vv^^v^^v^^^v^^v^vv") );
        assertEquals("^^^vvv^^v^v^^^v^vvv^^vv^vv^^^vv^vvvv^^vv^^^^v^",14, Santa.mostVisited("^^^vvv^^v^v^^^v^vvv^^vv^vv^^^vv^vvvv^^vv^^^^v^") );
        assertEquals("vv^v^^^^^^vvv^v^vv^^^v^^vvv^v^^vv^v^^v^v^^^^v^^",14, Santa.mostVisited("vv^v^^^^^^vvv^v^vv^^^v^^vvv^v^^vv^v^^v^v^^^^v^^") );
        assertEquals("^vv^vvv^^vv^v^v^v^^v^^^v^vvvvv^^v^v^v^v^^^^v^v^v",14, Santa.mostVisited("^vv^vvv^^vv^v^v^v^^v^^^v^vvvvv^^v^v^v^v^^^^v^v^v") );
        assertEquals("v^^^vv^^v^v^^^^^^vvvv^v^^^^^^vv^v^vvvvv^^^^^vvv^v",7, Santa.mostVisited("v^^^vv^^v^v^^^^^^vvvv^v^^^^^^vv^v^vvvvv^^^^^vvv^v") );
        assertEquals("^v^vvvv^vvv^^v^^^^^v^v^^^^^v^^vv^^^^^vvvv^vv^^^^vv",7, Santa.mostVisited("^v^vvvv^vvv^^v^^^^^v^v^^^^^v^^vv^^^^^vvvv^vv^^^^vv") );
        assertEquals("vv^v^^vvv^vvvv^^^v^^v^^^^^v^^v^^v^v^vv^^v^^v^vvvv^^",9, Santa.mostVisited("vv^v^^vvv^vvvv^^^v^^v^^^^^v^^v^^v^v^vv^^v^^v^vvvv^^") );
        assertEquals("^vvv^vv^v^v^^^^^v^^vv^^v^^vvvv^vvvvv^v^^vvv^^vvvvvvv",8, Santa.mostVisited("^vvv^vv^v^v^^^^^v^^vv^^v^^vvvv^vvvvv^v^^vvv^^vvvvvvv") );
        assertEquals("^^vv^^^vvvvvvv^^^v^^^^^^v^^^vvv^^v^vvvv^^v^v^^vvv^vvv",10, Santa.mostVisited("^^vv^^^vvvvvvv^^^v^^^^^^v^^^vvv^^v^vvvv^^v^v^^vvv^vvv") );
        assertEquals("v^^v^^vv^vv^^vv^^^^^^v^^vv^^^v^v^^^vvvvvv^v^v^^v^v^^^v",9, Santa.mostVisited("v^^v^^vv^vv^^vv^^^^^^v^^vv^^^v^v^^^vvvvvv^v^v^^v^v^^^v") );
        assertEquals("^vvv^vv^^^v^v^^^^^^vv^^^^^v^v^^^vv^v^v^vvvv^^v^^^v^^^v^",9, Santa.mostVisited("^vvv^vv^^^v^v^^^^^^vv^^^^^v^v^^^vv^v^v^vvvv^^v^^^v^^^v^") );
        assertEquals("^v^^v^vv^^v^v^^v^v^^v^^^^v^v^vvvv^vvvvvv^vv^^^vv^^^v^vv^",10, Santa.mostVisited("^v^^v^vv^^v^v^^v^v^^v^^^^v^v^vvvv^vvvvvv^vv^^^vv^^^v^vv^") );
        assertEquals("vv^^v^^^^vv^^vvv^vvv^^v^^^vv^vv^v^^v^v^v^v^v^^^v^vv^vvv^^",18, Santa.mostVisited("vv^^v^^^^vv^^vvv^vvv^^v^^^vv^vv^v^^v^v^v^v^v^^^v^vv^vvv^^") );
        assertEquals("^^vv^v^^^^v^vvv^^vv^vvvv^^v^^vvv^^vvvvvv^v^^^^vv^^v^vv^v^v",8, Santa.mostVisited("^^vv^v^^^^v^vvv^^vv^vvvv^^v^^vvv^^vvvvvv^v^^^^vv^^v^vv^v^v") );
        assertEquals("^v^vv^vv^v^v^v^^v^^^v^^^v^^vvv^^vvvvv^vv^^v^^^^^^^^v^vvvvvv",11, Santa.mostVisited("^v^vv^vv^v^v^v^^v^^^v^^^v^^vvv^^vvvvv^vv^^v^^^^^^^^v^vvvvvv") );
        assertEquals("v^^v^^vvv^vv^v^v^vvvvv^vvv^v^^v^v^^^^^^^^^^v^vv^^v^vv^^v^vv^",11, Santa.mostVisited("v^^v^^vvv^vv^v^v^vvvvv^vvv^v^^v^v^^^^^^^^^^v^vv^^v^vv^^v^vv^") );
        assertEquals("^vvv^vv^vv^^v^vv^vvv^^^^^v^v^v^v^v^v^vvv^^^v^vvvvvv^v^^^v^vv^",16, Santa.mostVisited("^vvv^vv^vv^^v^vv^vvv^^^^^v^v^v^v^v^v^vvv^^^v^vvvvvv^v^^^v^vv^") );
        assertEquals("vv^^v^v^^v^v^v^^vvvvvvv^^vvv^^v^^^v^^^^v^^^^^vv^^^^^vvvv^^^^^^",10, Santa.mostVisited("vv^^v^v^^v^v^v^^vvvvvvv^^vvv^^v^^^v^^^^v^^^^^vv^^^^^vvvv^^^^^^") );
        assertEquals("^vv^v^vvvv^^^vv^^v^v^^vvv^^v^^^^^^vv^^v^v^^v^^^^v^^^^vvv^^vv^v^",10, Santa.mostVisited("^vv^v^vvvv^^^vv^^v^v^^vvv^^v^^^^^^vv^^v^v^^v^^^^v^^^^vvv^^vv^v^") );
        assertEquals("^vvv^v^^vvvvvvvvv^vv^^vvvv^vv^^v^v^v^vvv^vvv^vvv^vvvv^^^v^vv^^vv",7, Santa.mostVisited("^vvv^v^^vvvvvvvvv^vv^^vvvv^vv^^v^v^v^vvv^vvv^vvv^vvvv^^^v^vv^^vv") );
        assertEquals("^^^vvvvv^v^^v^v^^vvvvvv^^vvvv^v^v^v^^^^v^vvvvv^^v^vvvvv^vv^^v^vvv",8, Santa.mostVisited("^^^vvvvv^v^^v^v^^vvvvvv^^vvvv^v^v^v^^^^v^vvvvv^^v^vvvvv^vv^^v^vvv") );
        assertEquals("v^vvvvv^vvv^^^v^^^^vvvvvvv^^^v^^^vv^^^^vv^vv^v^v^vvvvv^vvvv^v^v^^v",12, Santa.mostVisited("v^vvvvv^vvv^^^v^^^^vvvvvvv^^^v^^^vv^^^^vv^vv^v^v^vvvvv^vvvv^v^v^^v") );
        assertEquals("^^v^v^vvv^^^vv^^vvvvv^^v^^^vv^^v^^vvvvv^v^v^^vv^^v^^v^vv^vv^^vvvv^^",14, Santa.mostVisited("^^v^v^vvv^^^vv^^vvvvv^^v^^^vv^^v^^vvvvv^v^v^^vv^^v^^v^vv^vv^^vvvv^^") );
        assertEquals("v^^vv^^^v^vvvv^^^^vv^vv^^^^v^^vvvv^v^^^^^vvvvvv^^^^vvv^^^^vvv^^v^vv^",17, Santa.mostVisited("v^^vv^^^v^vvvv^^^^vv^vv^^^^v^^vvvv^v^^^^^vvvvvv^^^^vvv^^^^vvv^^v^vv^") );
        assertEquals("vvvv^v^^^^^vvv^vv^^v^v^vv^vv^^^^^vv^^v^vvvv^^vv^^v^^vv^^vv^^v^vvvvv^^",19, Santa.mostVisited("vvvv^v^^^^^vvv^vv^^v^v^vv^vv^^^^^vv^^v^vvvv^^vv^^v^^vv^^vv^^v^vvvvv^^") );
        assertEquals("^vvv^v^^v^v^^v^v^^^^v^^^^v^v^^^^vvv^^^v^v^^v^v^vv^^v^^^v^v^^v^v^vvv^vv",10, Santa.mostVisited("^vvv^v^^v^v^^v^v^^^^v^^^^v^v^^^^vvv^^^v^v^^v^v^vv^^v^^^v^v^^v^v^vvv^vv") );
        assertEquals("^^v^v^^v^v^^v^vvv^^vv^^v^vv^vv^vvv^^vv^^^v^v^^^^^v^^^^vv^^v^vvv^^v^vvvv",13, Santa.mostVisited("^^v^v^^v^v^^v^vvv^^vv^^v^vv^vv^vvv^^vv^^^v^v^^^^^v^^^^vv^^v^vvv^^v^vvvv") );
        assertEquals("^^v^v^vvvv^^vvvvv^v^v^^^^^vvvvvvvv^^^vv^v^^^^vv^^^^v^v^^^^^vvv^vv^vv^v^^",12, Santa.mostVisited("^^v^v^vvvv^^vvvvv^v^v^^^^^vvvvvvvv^^^vv^v^^^^vv^^^^v^v^^^^^vvv^vv^vv^v^^") );
        assertEquals("^^^v^v^v^v^^vv^^^vvvv^v^vvvv^^v^v^vv^^^^vvv^vvvvvv^v^^vv^^vv^vvvvvv^^^^vv",10, Santa.mostVisited("^^^v^v^v^v^^vv^^^vvvv^v^vvvv^^v^v^vv^^^^vvv^vvvvvv^v^^vv^^vv^vvvvvv^^^^vv") );
        assertEquals("^^v^^vvv^^vv^^^^^^vvv^^vv^^^vv^v^^v^v^^^vv^^^vvv^vvv^^vv^^vv^^v^^^v^^^vv^v",16, Santa.mostVisited("^^v^^vvv^^vv^^^^^^vvv^^vv^^^vv^v^^v^v^^^vv^^^vvv^vvv^^vv^^vv^^v^^^v^^^vv^v") );
        assertEquals("vvvv^vvv^^vv^v^vv^vv^v^^vvv^v^^vv^^^v^vvv^vv^^^^^^vvv^v^vvv^^^vv^vvvv^v^vvv",16, Santa.mostVisited("vvvv^vvv^^vv^v^vv^vv^v^^vvv^v^^vv^^^v^vvv^vv^^^^^^vvv^v^vvv^^^vv^vvvv^v^vvv") );
        assertEquals("^^v^vv^vv^v^vv^^^v^^vvvvv^v^^vvvvv^vv^v^v^^vvv^^v^v^^^^^^^vv^^vv^^v^^vv^^vvv",15, Santa.mostVisited("^^v^vv^vv^v^vv^^^v^^vvvvv^v^^vvvvv^vv^v^v^^vvv^^v^v^^^^^^^vv^^vv^^v^^vv^^vvv") );
        assertEquals("^^v^v^^^^v^^^vv^^^^vvv^vv^^vvvv^^vvvv^vv^^v^v^vv^vvvvvvv^^v^^^vv^vv^v^^^^v^^v",10, Santa.mostVisited("^^v^v^^^^v^^^vv^^^^vvv^vv^^vvvv^^vvvv^vv^^v^v^vv^vvvvvvv^^v^^^vv^vv^v^^^^v^^v") );
        assertEquals("^^vv^vvv^vv^vv^vvvv^v^v^vvvvvvv^vvvv^^vv^v^v^vvvvvv^v^vvv^v^vv^^^v^^v^vvv^vvv^",7, Santa.mostVisited("^^vv^vvv^vv^vv^vvvv^v^v^vvvvvvv^vvvv^^vv^v^v^vvvvvv^v^vvv^v^vv^^^v^^v^vvv^vvv^") );
        assertEquals("v^^^^^v^^v^vv^vvvv^vvvv^^^vvv^^vvv^^v^^v^v^^^v^v^^^^vv^^vvv^^^v^^vvvvv^^vvv^^v^",12, Santa.mostVisited("v^^^^^v^^v^vv^vvvv^vvvv^^^vvv^^vvv^^v^^v^v^^^v^v^^^^vv^^vvv^^^v^^vvvvv^^vvv^^v^") );
        assertEquals("vvvv^^v^v^v^^^^vv^v^vvvvv^^^^vv^^v^^^vv^^^^v^^v^vvv^vv^v^v^^^^vvvv^^^^^v^^^vv^v^",12, Santa.mostVisited("vvvv^^v^v^v^^^^vv^v^vvvvv^^^^vv^^v^^^vv^^^^v^^v^vvv^vv^v^v^^^^vvvv^^^^^v^^^vv^v^") );
        assertEquals("^^vv^vv^^^^v^^v^^^^v^^^^v^v^v^v^^^^v^vvv^vvvv^^vv^^vvv^^v^v^vvvv^v^vvvv^^^vvv^^vv",9, Santa.mostVisited("^^vv^vv^^^^v^^v^^^^v^^^^v^v^v^v^^^^v^vvv^vvvv^^vv^^vvv^^v^v^vvvv^v^vvvv^^^vvv^^vv") );
        assertEquals("v^v^v^^^vv^^vvvvv^^vv^vv^^^v^^^^^^v^vvvvvvv^^vv^^v^^vv^^^v^v^^vv^^vv^^^v^v^vvvv^^^",16, Santa.mostVisited("v^v^v^^^vv^^vvvvv^^vv^vv^^^v^^^^^^v^vvvvvvv^^vv^^v^^vv^^^v^v^^vv^^vv^^^v^v^vvvv^^^") );
        assertEquals("vvvv^^vvvv^vvv^v^vvvvv^^vv^^v^^v^^vv^v^v^v^^v^v^^^^^^^vv^^^v^^vv^vv^v^vv^v^^v^v^v^v",15, Santa.mostVisited("vvvv^^vvvv^vvv^v^vvvvv^^vv^^v^^v^^vv^v^v^v^^v^v^^^^^^^vv^^^v^^vv^vv^v^vv^v^^v^v^v^v") );
        assertEquals("vvv^^^^v^v^vv^^^^^vv^^v^v^vvvvvvv^v^^^vv^^v^^^^vvvvvvvvvv^vvvvv^^^v^v^vv^^^^^^^vvvvv",11, Santa.mostVisited("vvv^^^^v^v^vv^^^^^vv^^v^v^vvvvvvv^v^^^vv^^v^^^^vvvvvvvvvv^vvvvv^^^v^v^vv^^^^^^^vvvvv") );
        assertEquals("^^^^v^^^vv^^^^^^vv^v^vv^v^^^vv^v^^vv^^^^vv^^vv^^vv^vvvv^^vv^v^v^^v^v^vv^vv^^^vvvvvvv^",21, Santa.mostVisited("^^^^v^^^vv^^^^^^vv^v^vv^v^^^vv^v^^vv^^^^vv^^vv^^vv^vvvv^^vv^v^v^^v^v^vv^vv^^^vvvvvvv^") );
        assertEquals("v^^^^vv^vv^v^v^^vvv^^^^vvvvvv^^vvv^v^vv^vv^v^v^^^v^^vv^^^vvvv^vv^^v^vvvv^^vvv^^vvv^vvv",11, Santa.mostVisited("v^^^^vv^vv^v^v^^vvv^^^^vvvvvv^^vvv^v^vv^vv^v^v^^^v^^vv^^^vvvv^vv^^v^vvvv^^vvv^^vvv^vvv") );
        assertEquals("v^vv^v^^^^vvvv^^v^^vvvvv^vvv^vv^^^^v^v^^^v^vvv^vv^vv^v^^^v^^v^^^^v^^v^^v^v^^^v^^vv^^v^v",11, Santa.mostVisited("v^vv^v^^^^vvvv^^v^^vvvvv^vvv^vv^^^^v^v^^^v^vvv^vv^vv^v^^^v^^v^^^^v^^v^^v^v^^^v^^vv^^v^v") );
        assertEquals("v^vvv^vv^v^^vvvvvvvvv^^vv^vvv^v^v^^^^v^^^^^v^v^vv^^^vv^vv^^^^^v^v^vv^vv^^^^^^vvvvv^vvv^^",13, Santa.mostVisited("v^vvv^vv^v^^vvvvvvvvv^^vv^vvv^v^v^^^^v^^^^^v^v^vv^^^vv^vv^^^^^v^v^vv^vv^^^^^^vvvvv^vvv^^") );
        assertEquals("^^vv^v^^^^^vv^v^^^vvvv^v^v^vvvv^^vv^v^^vvvv^vvv^^^^^vvv^v^v^^v^v^^^vvv^^^v^vvv^^^^^^^^^v^",16, Santa.mostVisited("^^vv^v^^^^^vv^v^^^vvvv^v^v^vvvv^^vv^v^^vvvv^vvv^^^^^vvv^v^v^^v^v^^^vvv^^^v^vvv^^^^^^^^^v^") );
        assertEquals("v^^^^^vv^^^^^^vvv^v^vv^v^vvvv^^^^^^vvv^vvv^^v^v^^vvv^^^^^^^vv^^^^^^^v^vv^v^^^^v^v^^^^v^^^v",13, Santa.mostVisited("v^^^^^vv^^^^^^vvv^v^vv^v^vvvv^^^^^^vvv^vvv^^v^v^^vvv^^^^^^^vv^^^^^^^v^vv^v^^^^v^v^^^^v^^^v") );
        assertEquals("^^^v^^^^vv^^v^^vvvvv^vv^vvv^^v^^^vvvv^^^^v^^^vvvv^^v^^vv^v^v^vv^vv^v^^v^^v^vvvv^^vvvvv^v^^v",21, Santa.mostVisited("^^^v^^^^vv^^v^^vvvvv^vv^vvv^^v^^^vvvv^^^^v^^^vvvv^^v^^vv^v^v^vv^vv^v^^v^^v^vvvv^^vvvvv^v^^v") );
        assertEquals("^vvv^v^^^vvvv^^v^vv^^v^^^vvvvvv^^^v^^v^^^v^^^vvvv^^vv^vvvv^v^v^^^^vv^^v^^v^^^v^^^v^v^^vv^vvv",18, Santa.mostVisited("^vvv^v^^^vvvv^^v^vv^^v^^^vvvvvv^^^v^^v^^^v^^^vvvv^^vv^vvvv^v^v^^^^vv^^v^^v^^^v^^^v^v^^vv^vvv") );
        assertEquals("vvvvv^^vvvv^^^^^^^vvvv^^v^^^v^^v^vvv^v^vv^^^^^vvvv^^vvvvv^^v^^v^^^v^vvvv^^v^v^^v^^^v^^^vv^v^^",18, Santa.mostVisited("vvvvv^^vvvv^^^^^^^vvvv^^v^^^v^^v^vvv^v^vv^^^^^vvvv^^vvvvv^^v^^v^^^v^vvvv^^v^v^^v^^^v^^^vv^v^^") );
        assertEquals("^vv^vv^^^vv^vvvv^v^^vvv^v^^vv^^vvv^vvv^^v^^v^vv^v^v^^^v^^v^^^^vv^^^vv^^^vv^v^vv^v^^^vv^^v^vvv^",18, Santa.mostVisited("^vv^vv^^^vv^vvvv^v^^vvv^v^^vv^^vvv^vvv^^v^^v^vv^v^v^^^v^^v^^^^vv^^^vv^^^vv^v^vv^v^^^vv^^v^vvv^") );
        assertEquals("v^^^v^^^^vv^^^^v^^^v^^^vvvv^vvvvvv^^^^v^v^v^^^v^^vvvvvv^vvvvvvv^v^^v^vvv^^v^^v^v^v^v^v^^^v^v^vv",12, Santa.mostVisited("v^^^v^^^^vv^^^^v^^^v^^^vvvv^vvvvvv^^^^v^v^v^^^v^^vvvvvv^vvvvvvv^v^^v^vvv^^v^^v^v^v^v^v^^^v^v^vv") );
        assertEquals("^^v^^vvvvvv^vvvvv^^vv^^v^^^vv^^^^^^vvv^vvvvvvvv^vvv^^vvv^^v^^vv^vvvv^vv^v^vvvvv^^v^v^^^^v^^^^v^^",8, Santa.mostVisited("^^v^^vvvvvv^vvvvv^^vv^^v^^^vv^^^^^^vvv^vvvvvvvv^vvv^^vvv^^v^^vv^vvvv^vv^v^vvvvv^^v^v^^^^v^^^^v^^") );
        assertEquals("vv^^vvvvvv^vvvvv^^v^v^^vv^^^^v^v^vvv^^v^vv^^^^v^v^^v^^^v^^v^^v^vvv^^^^vv^^^v^^^vv^^vvv^^vv^^^^vvv",9, Santa.mostVisited("vv^^vvvvvv^vvvvv^^v^v^^vv^^^^v^v^vvv^^v^vv^^^^v^v^^v^^^v^^v^^v^vvv^^^^vv^^^v^^^vv^^vvv^^vv^^^^vvv") );
        assertEquals("^vvv^^v^^vvvvv^^^v^^^^vv^v^vvv^v^v^vvvvvv^^v^vv^vvv^^^vvvv^^v^^^v^^v^^^v^^^^^^v^^^^vvvv^^v^vvv^^v^",12, Santa.mostVisited("^vvv^^v^^vvvvv^^^v^^^^vv^v^vvv^v^v^vvvvvv^^v^vv^vvv^^^vvvv^^v^^^v^^v^^^v^^^^^^v^^^^vvvv^^v^vvv^^v^") );
        assertEquals("^^^vvvv^vv^vvv^v^v^^v^^^^vvv^^vvvvv^v^^^^^^v^v^vv^v^v^v^vvvvvv^^vvvv^vv^vvv^^^^vv^v^vv^vvv^^^^^^vvv",14, Santa.mostVisited("^^^vvvv^vv^vvv^v^v^^v^^^^vvv^^vvvvv^v^^^^^^v^v^vv^v^v^v^vvvvvv^^vvvv^vv^vvv^^^^vv^v^vv^vvv^^^^^^vvv") );
        assertEquals("^^v^v^^^^^v^vvv^vvv^v^^^v^v^^^^vvvv^v^v^vvv^v^v^^^vv^^^vv^^^^^^vv^vv^^v^^^^v^^v^^^^^^^vv^vv^^^^v^^^v",14, Santa.mostVisited("^^v^v^^^^^v^vvv^vvv^v^^^v^v^^^^vvvv^v^v^vvv^v^v^^^vv^^^vv^^^^^^vv^vv^^v^^^^v^^v^^^^^^^vv^vv^^^^v^^^v") );
        scoring.updateScore("lang:common_list_test_scoring_name",40);
    }
}